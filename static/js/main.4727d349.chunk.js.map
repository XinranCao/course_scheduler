{"version":3,"sources":["img/logo3.svg","newVersion/searchComp/SideBar.js","newVersion/searchComp/CourseList.js","newVersion/searchComp/DetailInfo.js","newVersion/Search.js","newVersion/schedulerComp/FavList.js","newVersion/schedulerComp/Schedule.js","newVersion/Scheduler.js","newVersion/New.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SideBar","props","_useState","useState","_useState2","Object","slicedToArray","filterMode","setFilterMode","_useState3","_useState4","keywordList","setKeywordList","_useState5","_useState6","alertMsg","setAlertMsg","mode","useRef","keyword","myFormRef","react_default","a","createElement","className","id","ref","onChange","current","value","filterCourse","key","style","visibility","length","onClick","onSubmit","e","preventDefault","curr","newMsg","match","includes","push","reset","addKeyword","ele","type","placeholder","autoComplete","Fragment","slice","reverse","map","item","index","splice","removeKeyword","CourseList","filteredCourses","courseSelected","selectCourse","resultNum","keys","concat","values","course","number","name","credits","DetailInfo","showSections","setShowSections","courseInfo","favList","modifyFavList","findRequisite","useEffect","getDay","day","monday","tuesday","wednesday","thursday","friday","toLowerCase","showTip","text","show","littletip","document","getElementById","display","innerText","left","clientX","top","clientY","courseAdded","cellSpacing","width","onScroll","thead","target","scrollTop","boxShadow","entries","sections","_ref","_ref2","section","sectionInfo","onMouseEnter","onMouseMove","onMouseLeave","replace","time","_ref3","_ref4","instructor","location","subsections","_ref5","_ref6","subsection","subsectionInfo","_ref7","_ref8","description","requisites","requisiteList","requisiteDiv","marginRight","getRequisiteDiv","keywords","requisite","Search","setCourseSelected","allCourses","updateFilteredCourses","searchComp_SideBar","courseKeywords","_step","flag","_iterator","createForOfIteratorHelper","s","n","done","_step2","_iterator2","indexOf","err","f","_step3","_iterator3","_step4","_iterator4","handleFilterCourses","searchComp_CourseList","handleSelectCourse","searchComp_DetailInfo","classList","handleFindRequisite","FavList","generateSchedule","showSecList","showSubSecList","selectedCourseList","state","setState","newShowSecList","newShowSubSecList","toConsumableArray","course_sec","split","filter","newSelectedCourseList","JSON","parse","stringify","selectedCourse","selectedSec","selectedSubSec","Saturday","Sunday","toggleAllCourses","operation","newList","objectSpread2","modifyAllSelected","modifySelectedCourseList","sectionNum","subSectionNum","defineProperty","sectionObj","constructor","subsectionObj","_i","_Object$entries","_Object$entries$_i","_i2","_Object$entries2","_Object$entries2$_i","_i3","_Object$entries3","checkAllCoursesSelected","toggleShowSecList","toggleShowSubSecList","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","totalCretis","getTotalCredits","console","log","Schedule","scheduleList","currSchedule","boxHeight","tempList","_loop","tempSchedule","newSchedule","conflict","_loop2","_Object$entries3$_i","date","_hours$split","_hours$split2","start","end","every","checkConflict","_i4","_Object$entries4","_Object$entries4$_i","newScheduleWithSubsec","_loop3","_Object$entries5$_i","_Object$entries5","_i5","_hours$split3","_hours$split4","getElementsByClassName","clientHeight","compareSec","start_1","Date","trim","getTime","end_1","start_2","end_2","convertTime","hour","Number","getDistance","handleSetCurrSchedule","nextSchedule","blur","test","parseInt","size","defaultValue","weekday","components","dayList","_i6","_Object$entries6","_Object$entries6$_i","classInfo","classNum","distances","height","getCourseBlock","Scheduler","setSelectedCourseList","schedulerComp_FavList","schedulerComp_Schedule","New","_this","classCallCheck","this","_super","call","navKey","subjects","schedule","ClassInfo","getSubjects","data","subject","_this2","_this$state","src","require","alt","newVersion_Search","handleModifyFavList","newVersion_Scheduler","React","Component","App","showVersion","newVersion_New","Boolean","window","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4727d349.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo3.1180ff75.svg\";","import React, { useState, useRef } from 'react';\nimport '../newVersion.css';\n\nfunction SideBar (props) {\n\n  const [filterMode, setFilterMode] = useState('intersection')\n  const [keywordList, setKeywordList] = useState([])\n  const[alertMsg, setAlertMsg] = useState('')\n  const mode = useRef(null);\n  const keyword = useRef(null);\n  let myFormRef = useRef(null)\n\n  const addKeyword = () => {\n    const curr = keyword.current.value;\n    let newMsg = ''\n\n    if (curr.match(/^\\s+$/) || curr.length === 0 ) {\n      newMsg = 'Please enter a keyword!'\n    } else if (keywordList.includes(curr)) {\n      newMsg = 'Keyword already added!'\n    } else if (curr.length > 15) {\n      newMsg = 'Please enter less than 16 characters!'\n    } else {\n      keywordList.push(curr);\n      setKeywordList(keywordList)\n      myFormRef.reset(); \n      props.filterCourse(keywordList, filterMode)\n    }\n    setAlertMsg(newMsg)\n  }\n\n  const removeKeyword = (index) => {\n    keywordList.splice(index, 1);\n    setKeywordList(keywordList)\n    props.filterCourse(keywordList, filterMode)\n  }\n     \n    return <div className='searchToolSec'>\n        <div className='sectionTitle'>Search for courses</div>\n        <div className='searchSetting'>\n          <div className='tagSetting'>\n            <span className='settingText'>Search mode</span>\n              <select \n                id='modeSelect' \n                ref={mode} \n                onChange={ () => {\n                  setFilterMode(mode.current.value);\n                  props.filterCourse(keywordList, mode.current.value)\n                }}>\n                <option key=\"intersection\" value='intersection'>Intersection of tags</option>\n                <option key=\"union\" value='union'>Union of tags</option>\n              </select>\n          </div>\n          <div className='tagInput'>\n            <span className='settingText'>Keyword</span>\n            <span \n                className='alert' \n                style={{ visibility: alertMsg.length ? \"visible\" : 'hidden' }} \n                onClick={ () => setAlertMsg('') } >\n                    {alertMsg}\n            </span>\n            <form onSubmit={(e) => { e.preventDefault(); addKeyword() }} ref={(ele) => myFormRef = ele}>\n              <input id='keywordInput' type='text' placeholder=\"Enter keyword\" ref={keyword} autoComplete=\"off\"/>\n            </form>\n          </div>\n          <div className='chosenTags'>\n            {\n              keywordList.length !== 0 \n                ? <>\n                    <span className='settingText'>Current keywords</span>\n                    <div className='keywordList'>\n                      {\n                        keywordList.slice().reverse().map((item,index)=>(\n                          <div className='currentKeyword' key={item}>\n                            {item}\n                            <div \n                              className='removeBtn' \n                              onClick={ ()=>removeKeyword(keywordList.length-index-1)} >\n                                {`\\u2715`}\n                            </div>\n                          </div>\n                        ))\n                      }\n                    </div>\n                </>\n                : null\n            }\n          </div>\n        </div>\n      </div>\n}\n\nexport default SideBar;","import React from 'react';\nimport '../newVersion.css';\n\nfunction CourseList(props) {\n\n  const { filteredCourses, courseSelected, selectCourse } = props\n  const resultNum = Object.keys(filteredCourses).length\n    \n  return <div className='courseListSec'>\n      <div className='sectionTitle'> {`${resultNum} result${resultNum>1?'s':''}`}</div>\n      <div className='courseList'>\n        {\n          Object.values(filteredCourses).map((course, index) => (\n            <div \n              key={course.number}\n              className={ courseSelected === index ? 'courseSelected' : 'courseInfo' }\n              onClick={ () => selectCourse(index) }>\n              <div className='number'>{course.number}</div>\n              <div className='name'>{course.name}</div>\n              <div className='credits'>\n                <span className='creditNum'>{course.credits}</span>\n                {` credit${course.credits>1?'s':''}`}\n              </div>\n            </div>\n          ))\n        }\n      </div>\n  </div>\n}\n\nexport default CourseList;","import React, { useState, useEffect } from \"react\";\nimport '../newVersion.css';\n\nfunction DetailInfo (props) {\n\n  const [showSections, setShowSections] = useState(false)\n  const { courseInfo, favList, modifyFavList, findRequisite } = props\n\n  useEffect(()=>{\n    setShowSections(false)\n  },[props.courseInfo])\n  \n  const tableScoll = (e) => {\n    const thead = document.getElementById('sectionThead')\n    if (e.target.scrollTop > 10) {\n      thead.style.boxShadow = '0px 6px 12px -8px #646569'\n    } else {\n      thead.style.boxShadow = 'none'\n    }\n  }\n\n  const getRequisiteDiv = (requisites) => {\n    const requisiteList = findRequisite(requisites)\n    const requisiteDiv = (<div className='requisites'>\n      <span style={{ marginRight: '8px' }}> Pre-requisite:</span>\n      <div>\n        {\n          requisiteList.map( (item, index) => (\n            <span className='requisite' key={item}>\n              {index ? `, ${item}` : item}\n            </span>\n          ))\n        }\n        { '.' }\n      </div>\n    </div>\n    )\n    return requisiteList.length ? requisiteDiv : null\n  }\n\n  const getDay = (day) => {\n    const dayMap = {\n      'monday': 'Mon ',\n      'tuesday': 'Tue ',\n      'wednesday': 'Wed ',\n      'thursday': 'Thu ',\n      'friday': 'Fri ',\n    }\n    return dayMap[day.toLowerCase()]\n  }\n\n  const showTip = (e,text,show) => {\n    const littletip = document.getElementById('addToListTip')\n    littletip.style.display = show ? 'flex' : 'none'\n    littletip.innerText = text === 'added' ? 'Already added to favorite list' : 'Add to favorite list'\n    if (e) {\n      littletip.style.left = `${e.clientX}px`\n      littletip.style.top = `${e.clientY - 42}px`\n    }\n  }\n\n  const courseAdded = favList[courseInfo.number]\n\n  return <div className='detailInfoSec'>\n    <div id='addToListTip' />\n    <div className='sectionTitle'>{courseInfo.number}</div>\n    {\n      Object.keys(courseInfo).length \n      ? <div className='detailInfo'>\n          <div className='titleArea'>\n            <div className='name'>\n              {courseInfo.name}\n              <div \n                className={ courseAdded ? 'favHeart_checked' : 'favHeart' }\n                onClick={ () => modifyFavList( courseAdded ? 'remove' : 'add', 'all', courseInfo, null, null) }/>\n            </div>\n            <div className='btns'>\n              <div \n                className={ showSections ? 'secHideBtn' : 'secShowBtn'} \n                onClick={ () => setShowSections(!showSections) }>\n                  {showSections ? 'Hide sections' : 'Show sections'}\n              </div>\n              <div \n                className={ courseAdded ? 'removeAll' : 'addAll' }  \n                onClick={ () => modifyFavList( courseAdded ? 'remove' : 'add', 'all', courseInfo, null, null) }>\n                  {courseAdded ? 'Remove from favorite' : 'Add all sections to favorite'}\n              </div>\n            </div>\n          </div>\n          {\n            showSections\n              ? <div className='sectionInfo'>\n                <table className=\"sectionTable\" cellSpacing='0' width=\"100%\">\n                  <tbody onScroll={tableScoll}>\n                    <tr id='sectionThead'>\n                      <td className='sectionTh'>Favorite</td>\n                      <td  className='sectionTh'>Sections</td>\n                      <td   className='sectionTh'>Time</td>\n                      <td className='sectionTh'>Instructor</td>\n                      <td  className='sectionTh'>Location</td>\n                    </tr>\n                    {\n                      Object.entries(courseInfo.sections).map(([section,sectionInfo]) => (\n                        <React.Fragment key={section}>\n                          <tr>\n                            {\n                              courseAdded && courseAdded.sections[section]\n                                ? <td \n                                  className='sectionTd fav lec' \n                                  onClick={() => {\n                                    modifyFavList('remove', 'section', courseInfo, section, null);\n                                    showTip(null,'notAdded',true)\n                                  }}\n                                  onMouseEnter={(e)=>showTip(e,'added',true)}\n                                  onMouseMove={(e)=>showTip(e,'added',true)}\n                                  onMouseLeave={(e)=>showTip(e,'added',false)}>\n                                    <div className='favoriteBtn_checked'>✓</div>\n                                </td>\n                                : <td \n                                  className='sectionTd fav lec' \n                                  onClick={() => {\n                                    modifyFavList('add', 'section', courseInfo, section, null);\n                                    showTip(null,'added',true)\n                                  }}\n                                  onMouseEnter={(e)=>showTip(e,'notAdded',true)}\n                                  onMouseMove={(e)=>showTip(e,'notAdded',true)}\n                                  onMouseLeave={(e)=>showTip(e,'notAdded',false)}>\n                                    <div className='favoriteBtn'>+</div>\n                                </td>\n                            }\n                              \n                            <td className='sectionTd lec'>{section.replace(\"_\", \" \")}</td>\n                            <td className='sectionTd lec'>\n                              {\n                                Object.entries(sectionInfo.time).map(([day,time]) => (\n                                  <span className='timeTd' key={day+time}>{getDay(day)}{time}</span>\n                                ))\n                              }\n                            </td>\n                            <td className='sectionTd lec'>{sectionInfo.instructor}</td>\n                            <td className='sectionTd lec'>{sectionInfo.location}</td>\n                          </tr>\n                          {\n                            Object.keys(sectionInfo.subsections).length === 0\n                              ? null\n                              : Object.entries(sectionInfo.subsections).map(([subsection,subsectionInfo]) => (\n                                <tr key={subsection}>\n                                  {\n                                    courseAdded \n                                    && courseAdded.sections[section]\n                                    && courseAdded.sections[section].subsections[subsection]\n                                      ? <td \n                                        className='sectionTd fav' \n                                        onClick={()=>{\n                                          modifyFavList('remove', 'subsection', courseInfo, section, subsection);\n                                          showTip(null,'notAdded',true)\n                                        }}\n                                        onMouseEnter={(e)=>showTip(e,'added',true)}\n                                        onMouseMove={(e)=>showTip(e,'added',true)}\n                                        onMouseLeave={(e)=>showTip(e,'added',false)}>\n                                          <div className='favoriteBtn_checked'>✓</div>\n                                      </td>\n                                      : <td \n                                        className='sectionTd fav' \n                                        onClick={()=>{\n                                          modifyFavList('add', 'subsection', courseInfo, section, subsection);\n                                          showTip(null,'added',true)\n                                        }}\n                                        onMouseEnter={(e)=>showTip(e,'notAdded',true)}\n                                        onMouseMove={(e)=>showTip(e,'notAdded',true)}\n                                        onMouseLeave={(e)=>showTip(e,'notAdded',false)}>\n                                          <div className='favoriteBtn'>+</div>\n                                      </td>\n                                  }\n                                  <td className='sectionTd'>{subsection.replace(\"_\", \" \")}</td>\n                                  <td className='sectionTd'>\n                                    {\n                                      Object.entries(subsectionInfo.time).map(([day,time]) => (\n                                          <span className='timeTd' key={day+time}>{getDay(day)}{time}</span>\n                                      ))\n                                    }\n                                  </td>\n                                  <td className='sectionTd'></td>\n                                  <td className='sectionTd'>{subsectionInfo.location}</td>\n                                </tr>\n                              ))\n                          }\n                        </React.Fragment>\n                      ))\n                    }\n                  </tbody>\n                </table>\n              </div>\n              : <>\n                  <div className='description'>{courseInfo.description}</div>\n                  { getRequisiteDiv(courseInfo.requisites) }\n                  <div className='keywords'>\n                    <span style={{ marginRight: '8px' }}>Keywords:</span>\n                    <div>\n                      {\n                        courseInfo.keywords.map((item, index) => (\n                          <span className='keyword' key={item}>\n                            {index ? `, ${item}` : item}\n                          </span>\n                        ))\n                      }\n                      {\".\"}\n                    </div>\n                  </div>\n                  <div className='requisite'>{courseInfo.requisite}</div>\n              </>\n          }\n        </div>\n      : null\n    }\n\n  </div>\n}\n\nexport default DetailInfo;","import React, { useState } from 'react';\nimport SideBar from './searchComp/SideBar';\nimport CourseList from './searchComp/CourseList';\nimport DetailInfo from './searchComp/DetailInfo';\nimport './newVersion.css';\n\nfunction Search (props) {\n\n  const [courseSelected, setCourseSelected] = useState(-1)\n\n  const { favList, filteredCourses, modifyFavList, allCourses, updateFilteredCourses } = props\n\n  const handleFilterCourses = (keywordList, mode) => {\n    let filteredCourses = []\n\n    if (!keywordList.length || !Object.values(allCourses).length) { \n      updateFilteredCourses(allCourses) \n      setCourseSelected(-1)\n      return;\n    }\n\n    Object.values(allCourses).map( course => {\n      let courseKeywords = []\n      course.keywords.map(item=>courseKeywords.push(item))\n      courseKeywords.push(course.name, course.number)\n\n      if (mode === 'intersection') {  // intersection of keywords\n        let flag = true  // flag indicate whether currently all keywords are matched\n        for (const keyword of keywordList) {  // user entered keywords\n          let match = false // matchFlag indicator whether user entered keyword matches\n          for (const courseKeyword of courseKeywords) { // course keywords\n            if (courseKeyword.indexOf(keyword) !== -1) {  // if match at least one keyword\n              match = true;\n              break;\n            }\n          }\n          if (!match) {  // if some user entered keywords are not matched\n            flag = false  // becaue filter mode is \"intersection\", this couse doesn't meet condition\n            break;\n          }\n        }\n        if (flag) { filteredCourses.push(course) }  // if all user entered keywords are matched, add to list\n      \n      } else {  // union of keywords\n        for (const keyword of keywordList) {  // user entered keywords\n          let match = false // match flag\n          for (const courseKeyword of courseKeywords) { // course keywords\n            if (courseKeyword.indexOf(keyword) !== -1) {  // if match at least one keyword\n              filteredCourses.push(course)  //  push the course into the filtered course list\n              match = true\n              break;  // because filter mode is \"union\", no need to check other keywords\n            }\n          }\n          if (match) { break; } // because filter mode is \"union\", no need to check other keywords\n        }\n      }\n      return null\n    })\n    updateFilteredCourses(filteredCourses)\n    setCourseSelected(-1)\n  }\n\n  const handleSelectCourse = (index) => {\n    const newIndex = courseSelected === index ? -1 : index\n    setCourseSelected(newIndex)\n  }\n\n  const handleFindRequisite = (requisiteList) => {\n    const classList = []\n    requisiteList.map( requisite => {\n      requisite.map( item => {\n        classList.push(allCourses[item].number ); return null\n      })\n      return null\n    })\n    return classList\n  }\n  return <>\n    <SideBar filterCourse={ (keywordList, mode) => handleFilterCourses(keywordList, mode) } />\n    <CourseList \n      filteredCourses={filteredCourses} \n      courseSelected={courseSelected} \n      selectCourse={ index => handleSelectCourse(index) } />\n    <DetailInfo \n      favList = {favList}\n      modifyFavList = {modifyFavList}\n      courseInfo={ courseSelected < 0 ? {} : Object.values(filteredCourses)[courseSelected] }\n      findRequisite={ requisiteList => handleFindRequisite(requisiteList) } />\n  </>\n}\n\nexport default Search;","import React, { useState, useEffect } from 'react';\nimport '../newVersion.css';\n\nfunction FavList(props) {  \n\n  const { favList, modifyFavList, generateSchedule } = props\n\n  const [state, setState] = useState({\n    showSecList: [],\n    showSubSecList: [],\n    selectedCourseList: {}\n  })\n\n  useEffect(()=>{\n    let newShowSecList = []\n    let newShowSubSecList = []\n\n    state.showSecList.map( course => {\n      if (Object.keys(favList).includes(course)) {\n        newShowSecList = [...state.showSecList]\n        state.showSubSecList.map( course_sec => {\n          if (!Object.keys(favList[course].sections).includes(course_sec.split('-')[1])) {\n            newShowSubSecList = state.showSubSecList.filter( e => e !== course_sec )\n          } else {\n            newShowSubSecList = [...state.showSubSecList]\n          }\n          return null\n        })\n      } else {\n        newShowSecList = state.showSecList.filter( e => e !== course )\n        newShowSubSecList = state.showSubSecList.filter( e => e.indexOf(course) < 0 )\n      }\n      return null\n    })\n\n    let newSelectedCourseList = JSON.parse(JSON.stringify(state.selectedCourseList))\n\n    Object.entries(state.selectedCourseList).map( ([selectedCourse, courseInfo]) => {\n      if( Object.keys(favList).includes(selectedCourse) ) {\n        Object.entries(courseInfo.sections).map(([ selectedSec, sectionInfo ])=>{\n          if(Object.keys(favList[selectedCourse].sections).includes(selectedSec)) {\n            Object.entries(sectionInfo.subsections).map(([ selectedSubSec ])=>{\n              if(!Object.keys(favList[selectedCourse].sections[selectedSec].subsections).includes(selectedSubSec)) {\n                delete newSelectedCourseList[selectedCourse].sections[selectedSec].subsections[selectedSubSec]\n              }\n              return null\n            })\n          } else {\n            delete newSelectedCourseList[selectedCourse].sections[selectedSec]\n          }\n          return null\n        })\n      } else {\n        delete newSelectedCourseList[selectedCourse]\n      }\n      return null\n    })\n\n    setState({ \n      showSecList: newShowSecList,\n      showSubSecList: newShowSubSecList,\n      selectedCourseList: newSelectedCourseList\n    })\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [favList])\n\n  const modifyAllSelected = (operation) => {\n    let newList = {}\n    if (operation === 'add') {\n      newList = JSON.parse(JSON.stringify(favList))\n    }\n    setState({ ...state, selectedCourseList: newList })\n  }\n\n  const toggleShowSecList = (course) => {\n    if( state.showSecList.indexOf(course) < 0 ) {\n      setState({\n        ...state,\n        showSecList: [...state.showSecList, course]\n      })\n    } else {\n      setState({\n        ...state,\n        showSecList: state.showSecList.filter( e => e !== course ),\n        showSubSecList: state.showSubSecList.filter( e => e.indexOf(course) < 0 )\n      })\n    }\n  }\n\n  const toggleShowSubSecList = (course, section) => {\n    const course_sec = course + '-' + section\n    if( state.showSubSecList.indexOf(course_sec) < 0 ) {\n      setState({\n        ...state,\n        showSubSecList: [...state.showSubSecList, course_sec]\n      })\n    } else {\n      setState({\n        ...state,\n        showSubSecList: state.showSubSecList.filter( e => e !== course_sec )\n      })\n    }\n  }\n    \n  const getDay = (day) => {\n    const dayMap = {\n      'monday': 'Mon ',\n      'tuesday': 'Tue ',\n      'wednesday': 'Wed ',\n      'thursday': 'Thu ',\n      'friday': 'Fri ',\n      'Saturday': 'Sat ',\n      'Sunday': 'Sun '\n    }\n    return dayMap[day.toLowerCase()]\n  }\n\n  const toggleAllCourses = (operation) => {\n    modifyAllSelected(operation)\n  }\n\n  const checkAllCoursesSelected = () => {\n    let flag = true\n    for (const [course, courseInfo] of Object.entries(favList) ) {\n      const courseSelected = state.selectedCourseList[course]\n      if (!courseSelected) {\n        flag = false\n        return\n      }\n      for (const [section, sectionInfo] of Object.entries(courseInfo.sections)) {\n        if (!state.selectedCourseList[course].sections[section]) {\n          flag = false\n          return\n        }\n        for (const [subsection] of Object.entries(sectionInfo.subsections)) {\n          if (!state.selectedCourseList[course].sections[section].subsections[subsection]) {\n            flag = false\n            return\n          }\n        }\n      }\n    }\n    return flag\n  }\n\n  const modifySelectedCourseList = (operation, key, course, sectionNum, subSectionNum) => {\n\n    const courseInfo = JSON.parse(JSON.stringify(course))\n    const newList = JSON.parse(JSON.stringify(state.selectedCourseList))\n\n    if (operation === 'remove') {\n      if (key === 'all') {\n        // delete whole course\n        delete newList[courseInfo.number];\n      } else if (key === 'section') {\n        // delete section\n        delete newList[courseInfo.number].sections[sectionNum];\n        var sectionObj = newList[courseInfo.number].sections;\n        // when all sections are deleted, delete the course\n        if (Object.entries(sectionObj).length === 0 && sectionObj.constructor === Object) {\n          delete newList[courseInfo.number];\n        }\n      } else {\n        // delete subsection\n        delete newList[courseInfo.number].sections[sectionNum].subsections[subSectionNum];\n        var subsectionObj = newList[courseInfo.number].sections[sectionNum].subsections;\n        // when all subsections are deleted, delete the section\n        if (Object.entries(subsectionObj).length === 0 && subsectionObj.constructor === Object) {\n          delete newList[courseInfo.number].sections[sectionNum];\n          let sectionObj = newList[courseInfo.number].sections;\n          // when all ections a deleted, delete the course\n          if (Object.entries(sectionObj).length === 0 && sectionObj.constructor === Object)\n            delete newList[courseInfo.number];\n        }\n      }\n      setState({ ...state, selectedCourseList: newList })\n      return\n    }\n\n    if (key === 'all') {\n      newList[courseInfo.number] = {...courseInfo}\n    } else if (key === 'section') {\n      // check if the course is already in schedule\n      if (newList[courseInfo.number]) {\n          (newList[courseInfo.number].sections)[sectionNum] = courseInfo.sections[sectionNum]\n      } else {\n        newList[courseInfo.number] = {\n          ...courseInfo,\n          \"sections\": { [sectionNum]: courseInfo.sections[sectionNum] }\n        }\n      }\n    } else {\n      // check if the course is already in schedule\n      if (newList[courseInfo.number]) {\n        let sections = newList[courseInfo.number].sections;\n        //check if the section is already in schedule\n        if (sections[sectionNum]) {\n          sections[sectionNum].subsections[subSectionNum] = courseInfo.sections[sectionNum].subsections[subSectionNum];\n        }\n        else {\n          sections[sectionNum] = {\n            ...courseInfo.sections[sectionNum],\n            \"subsections\": { [subSectionNum]: courseInfo.sections[sectionNum].subsections[subSectionNum] }\n          }\n        }\n      } else {\n        newList[courseInfo.number] =\n        {\n          ...courseInfo,\n          \"sections\": {\n            [sectionNum]: {\n              ...courseInfo.sections[sectionNum],\n              \"subsections\": { [subSectionNum]: courseInfo.sections[sectionNum].subsections[subSectionNum] }\n            }\n          }\n        }\n      }\n    }\n    setState({ ...state, selectedCourseList: newList })\n  }\n\n  const getTotalCredits = () => {\n    let totalCretis = 0\n    Object.values(state.selectedCourseList).map(courseInfo => {\n      totalCretis += courseInfo.credits\n      return null\n    })\n    return totalCretis\n  }\n\n  return <div className='favListSec'>\n    <div className='sectionTitle'>Favorite List</div> \n    { \n      Object.values(favList).length ? \n        checkAllCoursesSelected()\n          ? <div className='selectAll' onClick={ () => toggleAllCourses('remove') }>\n              <div className='checkBtn_checked'> ✓ </div>\n              <span>Unselect all</span>\n          </div>\n          : <div className='selectAll' onClick={ () => toggleAllCourses('add') }>\n              <div className='checkBtn'/>\n              <span>Select all</span>\n          </div> \n      : <div className='selectAll' />\n    }\n    <div className='favList'>\n      {\n        Object.values(favList).length\n          ? null\n          : <span className='noCourseTip'>Currently no course in list</span>\n      }\n      {\n        Object.values(favList).map( course => {\n          const courseSelected = state.selectedCourseList[course.number]\n          return <React.Fragment key={course.number}>\n            <div className='favCourse'>\n              <div \n                className={ courseSelected ? 'checkBtn_checked' : 'checkBtn' }  \n                onClick={ () => modifySelectedCourseList( courseSelected ? 'remove' : 'add', 'all', course, null, null) }>\n                  {courseSelected ? '✓' : ''}\n              </div>\n              <div \n                className={ state.showSecList.includes(course.number) ? 'showSectionBtn' : 'showSectionBtn_active' }\n                onClick={()=>toggleShowSecList(course.number)}>\n                  {state.showSecList.includes(course.number) ? 'Hide sections' : 'Show sections'}\n              </div>\n              <div className='number'>{course.number}</div>\n              <div className='credits'>\n                <span className='creditNum'>{course.credits}</span>\n                {` credit${course.credits>1?'s':''}`}\n              </div>\n              <div \n                className='removeBtn' \n                onClick={()=>{\n                  modifyFavList( 'remove', 'all', course, null, null);\n                } }>Remove</div>\n            </div>\n            {\n              state.showSecList.includes(course.number) ? \n                Object.entries(course.sections).map(([section,sectionInfo]) => (\n                  <React.Fragment key={section}>\n                    <div className='favSecInfo' >\n                      {\n                        courseSelected && courseSelected.sections[section]\n                        ? <div \n                          className='checkBtn_checked'\n                          onClick={ () => modifySelectedCourseList( 'remove', 'section', course, section, null) }> ✓ </div>\n                        : <div \n                          className='checkBtn'\n                          onClick={ () => modifySelectedCourseList( 'add', 'section', course, section, null) }/>\n                      }\n                      {\n                        Object.keys(sectionInfo.subsections).length !== 0\n                        ? <div \n                            className={ state.showSubSecList.includes(course.number + '-' + section) ? 'showSectionBtn' : 'showSectionBtn_active' }\n                            onClick={()=>toggleShowSubSecList(course.number, section)}>\n                              {state.showSubSecList.includes(course.number + '-' + section) ? 'Hide subsections' : 'Show subsections'}\n                          </div>\n                        : null\n                      }\n                      <div className='number'>{section}</div>\n                      <div className='timeArea'>\n                        {\n                          Object.entries(sectionInfo.time).map(([day,time]) => (\n                            <span className='time' key={day+time}>{getDay(day)}{time}</span>\n                          ))\n                        }\n                      </div>\n                      <div \n                        className='removeBtn' \n                        onClick={()=>{\n                          modifyFavList( 'remove', 'section', course, section, null);\n                        }}>Remove</div>\n                    </div>\n                    {\n                      state.showSubSecList.includes(course.number + '-' + section) ? \n                        Object.entries(sectionInfo.subsections).map(([subsection,subsectionInfo]) => (\n                          <div className='favSubSecInfo' key={subsection}>\n                            {\n                              courseSelected \n                              && courseSelected.sections[section]\n                              && courseSelected.sections[section].subsections[subsection]\n                              ? <div \n                                className='checkBtn_checked'\n                                onClick={ () => modifySelectedCourseList( 'remove', 'subsection', course, section, subsection) }> ✓ </div>\n                              : <div \n                                className='checkBtn'\n                                onClick={ () => modifySelectedCourseList( 'add', 'subsection', course, section, subsection) }/>\n                            }\n                            <div className='number'>{subsection}</div>\n                            <div className='timeArea'>\n                              {\n                                Object.entries(subsectionInfo.time).map(([day,time]) => (\n                                  <span className='time' key={day+time}>{getDay(day)}{time}</span>\n                                ))\n                              }\n                            </div>\n                            <div \n                              className='removeBtn' \n                              onClick={()=>{\n                                modifyFavList( 'remove', 'subsection', course, section, subsection);\n                              } }>Remove</div>\n                          </div>\n                        )) : null\n                    }\n                  </React.Fragment>\n                )) : null\n              }\n          </React.Fragment>\n        })\n      }\n    </div>\n    <div className='footer'>\n      <div className='info'>\n        <div>Selected <span>{Object.values(state.selectedCourseList).length}</span> classes</div>\n        <div>Total credits: <span>{getTotalCredits()}</span></div>\n      </div>\n      <div className='settingBtn'></div>\n      <div\n        className = { Object.values(state.selectedCourseList).length ? 'generateBtn' : 'generateBtn_disabled' }\n        onClick={ ()=>{\n          Object.values(state.selectedCourseList).length \n            ? generateSchedule(state.selectedCourseList) \n            : console.log('no course selected')}}>\n        Generate Schedule\n      </div>\n    </div>\n  </div>\n}\n\nexport default FavList;","import React, { useEffect, useState, useRef } from 'react';\nimport '../newVersion.css';\n\nfunction Schedule(props) {\n\n  const [state, setState] = useState({\n    scheduleList: [],\n    currSchedule: 0,\n    boxHeight: 0\n  })\n\n  const { selectedCourseList } = props\n  const { scheduleList, currSchedule, boxHeight } = state\n  const keyword = useRef(null)\n  let myFormRef = useRef(null)\n  const timeLine = ['8:00 am', '9:00 am', '10:00 am', '11:00 am', '12:00 pm', \n                    '1:00 pm', '2:00 pm', '3:00 pm', '4:00 pm', '5:00 pm']\n\n  useEffect(()=>{\n    let tempList = []\n\n    for ( const [course, courseInfo] of Object.entries(selectedCourseList) ) {\n\n      if (!tempList.length) {\n        tempList.push({\n          'monday': {},\n          'tuesday': {},\n          'wednesday': {},\n          'thursday': {},\n          'friday': {},\n        })\n      }\n      let newList = []\n\n      tempList.map( tempSchedule => {\n        for ( const [section, sectionInfo] of Object.entries(courseInfo.sections) ) {\n\n          let newSchedule = JSON.parse(JSON.stringify(tempSchedule))\n          let conflict = false\n\n          for ( const [date, hours] of Object.entries(sectionInfo.time) ) {\n\n            let [start, end] = hours.split('-')\n\n            if ( Object.values(newSchedule[date]).every( item => checkConflict( item, [start, end] )) ) {\n\n              newSchedule[date][ course + '-' + section ] = {\n                'instructor': sectionInfo.instructor,\n                'location': sectionInfo.location,\n                'time': {\n                  'start': start,\n                  'end': end\n                }\n              }\n            } else {\n              conflict = true\n            }\n          }\n\n          if (conflict) {\n            continue;\n          } else if ( !Object.keys(sectionInfo.subsections).length ) {\n            newList.push(newSchedule)\n            continue;\n          }\n\n          for ( const [subsection, subsectionInfo] of Object.entries(sectionInfo.subsections) ) {\n            let newScheduleWithSubsec = JSON.parse(JSON.stringify(newSchedule))\n            for ( const [date, hours] of Object.entries(subsectionInfo.time) ) {\n\n              let [start, end] = hours.split('-')\n\n              if ( Object.values(newScheduleWithSubsec[date]).every( item => checkConflict( item, [start, end] )) ) {\n\n                newScheduleWithSubsec[date][ course + '-' + section + '-' + subsection ] = {\n                  'instructor': sectionInfo.instructor,\n                  'location': subsectionInfo.location,\n                  'time': {\n                    'start': start,\n                    'end': end\n                  }\n                }\n                conflict = false\n              } else {\n                conflict = true\n              }\n            }\n            if (!conflict) {\n              newList.push(newScheduleWithSubsec)\n            }\n          }\n        }\n        return null\n      })\n      tempList = [...newList]\n    }\n\n    if (myFormRef.current !== null) {\n      myFormRef.current.reset() \n    }  else {\n    }\n    // const pageForm = document.getElementById('pageForm').reset()\n    setState({\n      scheduleList: tempList,\n      currSchedule: 0,\n      boxHeight: document.getElementsByClassName('scheduleSec')[0].clientHeight - 72\n    }) \n  },[selectedCourseList])\n\n  const checkConflict = (compareSec, [start, end]) => {\n\n    const start_1 = new Date(\"01/01/2000 \" + start.trim().slice(0, -2) + \" \" + start.trim().slice(-2)).getTime()\n    const end_1 = new Date(\"01/01/2000 \" + end.trim().slice(0, -2) + \" \" + end.trim().slice(-2)).getTime()\n\n    const start_2 = new Date(\"01/01/2000 \" + compareSec.time.start.trim().slice(0, -2) + \" \" + compareSec.time.start.trim().slice(-2)).getTime()\n    const end_2 = new Date(\"01/01/2000 \" + compareSec.time.end.trim().slice(0, -2) + \" \" + compareSec.time.end.trim().slice(-2)).getTime()\n\n    if (end_1 < start_2 || start_1 > end_2 ) {\n      return true\n    }\n    return false\n  }\n\n  const getDay = (day) => {\n    const dayMap = {\n      'monday': 'Mon. ',\n      'tuesday': 'Tue. ',\n      'wednesday': 'Wed. ',\n      'thursday': 'Thu. ',\n      'friday': 'Fri. ',\n    }\n    return dayMap[day.toLowerCase()]\n  }\n\n  const convertTime = (time) => {\n    let hour = Number(time.split(':')[0])\n    if (time.includes('pm') && (hour !== 12)) {\n      hour += 12;\n    }\n    let minute = Number(time.split(':')[1].trim().slice(0, -2));\n    return hour + minute / 60;\n  }\n\n  const getDistance = (start, end) => {\n\n    const top = 12 + boxHeight * ((convertTime(start) - convertTime('7:30am')) / (convertTime('5:30pm') - convertTime('7:30am')))\n    const bottom = 12 + boxHeight * ((convertTime(end) - convertTime('7:30am')) / (convertTime('5:30pm') - convertTime('7:30am')))\n    return [top, bottom]\n  }\n\n  const getCourseBlock = (weekday) => {\n    let components = []\n    if (!scheduleList.length){ return null}\n    const dayList = scheduleList[currSchedule][weekday]\n\n    for ( const [number, classInfo] of Object.entries(dayList)) {\n      const classNum = number.split('-')\n      const distances = getDistance(classInfo.time.start, classInfo.time.end)\n      components.push(\n        <div \n          key={number} \n          className='classCard' \n          style={{ \n            height: `${distances[1] - distances[0]}px`, \n            top: `${distances[0]}px`\n          }}>\n          <span>{`${classNum[0]}`}</span>\n          <span>{`${classNum[classNum.length - 1]}`}</span>\n          <span>{`${classInfo.time.start} - ${classInfo.time.end}`}</span>\n        </div>\n      )\n    }\n\n    return components\n  }\n\n  const handleSetCurrSchedule = (operation, number) => {\n    let nextSchedule = -1\n\n    if (operation === 'jump') {\n\n      document.getElementById('pageNum').blur()\n      myFormRef.current.reset() \n\n      if (!/^[0-9]*$/.test(number)) {\n        console.log('not number', number)\n        return\n      }\n\n      if (number <= scheduleList.length) { \n        nextSchedule =  parseInt(number) - 1 \n      }\n      \n    } else if (operation === 'prev') {\n      if (currSchedule > 0) { \n        myFormRef.current.reset()\n        nextSchedule = currSchedule - 1 ;\n      }\n    } else if (operation === 'next') {\n      if (currSchedule < scheduleList.length - 1) { \n        myFormRef.current.reset()\n        nextSchedule = currSchedule + 1 ;\n      }\n    } else {\n      return \n    }\n\n    // console.log('nextSchedule',nextSchedule)\n    if (nextSchedule < 0) { return }\n    setState({\n      ...state,\n      currSchedule: nextSchedule\n    })\n  }\n\n    // console.log('currSchedule',currSchedule)\n  return <div className='scheduleSec'>\n    <div className='sectionTitle'>Schedules\n    {\n      Object.keys(selectedCourseList).length\n        ? scheduleList.length\n          ? <div className='pagination'>\n            <div \n              id = 'prevbtn'\n              className={ currSchedule > 0 ? 'controlBtn' : 'controlBtn_disabled' }\n              onClick={()=>handleSetCurrSchedule('prev', null)}>{'<'}</div>\n            <div className='pageNum'>\n              <form id='pageForm' onSubmit={(e) => { e.preventDefault(); handleSetCurrSchedule('jump', keyword.current.value) }} ref={myFormRef}>\n                <input id='pageNum' type='text' size='3' defaultValue={currSchedule + 1} ref={keyword} autoComplete=\"off\"/>\n              </form>\n              {'/ '}\n              <span>{scheduleList.length}</span>\n            </div>\n            <div \n              id = 'nextbtn'\n              className={ currSchedule < scheduleList.length - 1 ? 'controlBtn' : 'controlBtn_disabled' }\n              onClick={()=>handleSetCurrSchedule('next', null)}>{'>'}</div>\n          </div>\n          : <div className='pagination'>No possible schedule</div>\n        : null\n    }\n\n    </div>\n    {\n      scheduleList.length \n        ? <div className='calendar'>\n          {\n            ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'].map( weekday => (\n              <div className='weekdayArea' key={weekday}>\n                <span className='weekday'>{getDay(weekday)}</span>\n                { getCourseBlock(weekday) }\n              </div>\n            ))\n          }\n          {\n            timeLine.map( item => {\n              const top = getDistance(item, item)[0]\n              return <React.Fragment key={item}>\n                <span className='timeTip' style={{ top: `${top - 10}px`}}>{item}</span>\n                <div  className='timeLine' style={{ top: `${top}px`}}/>\n              </React.Fragment>\n            })\n          }\n        </div> : null\n    }\n\n  </div>\n}\n\nexport default Schedule;","import React, { useState } from 'react';\nimport FavList from './schedulerComp/FavList'\nimport Schedule from './schedulerComp/Schedule'\nimport './newVersion.css';\n\nfunction Scheduler (props) {\n\n  const { favList, modifyFavList } = props\n\n  const [selectedCourseList, setSelectedCourseList] = useState({})\n\n  return <>\n    <FavList\n      favList = {favList} \n      modifyFavList = {modifyFavList}\n      generateSchedule = {setSelectedCourseList} />\n    <Schedule selectedCourseList={selectedCourseList}/>\n  </>\n}\n\nexport default Scheduler;","import React from 'react';\nimport Search from './Search';\nimport Scheduler from './Scheduler';\nimport './newVersion.css';\nimport ClassInfo from '../ClassInfo.json';\n\nclass New extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        navKey: 'Search',\n        allCourses: {},\n        filteredCourses: {},\n        favList: {},\n        subjects: [],\n        schedule: {}\n    };\n  }\n\n  componentDidMount() {\n    // console.log('===',ClassInfo)\n    this.setState({ \n      allCourses: ClassInfo, \n      filteredCourses: ClassInfo, \n      subjects: this.getSubjects(ClassInfo) \n    })\n  }\n\n  getSubjects(data) {\n    let subjects = [];\n    subjects.push(\"All\");\n    Object.values(data).map( item => (\n      subjects.includes(item.subject) ? null : subjects.push(item.subject) \n    ))\n    return subjects;\n  }\n\n  handleModifyFavList(operation, key, course, sectionNum, subSectionNum) {\n    const { favList } = this.state\n\n    const courseInfo = JSON.parse(JSON.stringify(course))\n    const newList = JSON.parse(JSON.stringify(favList))\n\n    if (operation === 'remove') {\n      if (key === 'all') {\n        // delete whole course\n        delete newList[courseInfo.number];\n      } else if (key === 'section') {\n        // delete section\n        delete newList[courseInfo.number].sections[sectionNum];\n        var sectionObj = newList[courseInfo.number].sections;\n        // when all sections are deleted, delete the course\n        if (Object.entries(sectionObj).length === 0 && sectionObj.constructor === Object) {\n          delete newList[courseInfo.number];\n        }\n      } else {\n        // delete subsection\n        delete newList[courseInfo.number].sections[sectionNum].subsections[subSectionNum];\n        var subsectionObj = newList[courseInfo.number].sections[sectionNum].subsections;\n        // when all subsections are deleted, delete the section\n        if (Object.entries(subsectionObj).length === 0 && subsectionObj.constructor === Object) {\n          delete newList[courseInfo.number].sections[sectionNum];\n          let sectionObj = newList[courseInfo.number].sections;\n          // when all ections a deleted, delete the course\n          if (Object.entries(sectionObj).length === 0 && sectionObj.constructor === Object)\n            delete newList[courseInfo.number];\n        }\n      }\n      this.setState({ favList: newList })\n      return\n    }\n\n    if (key === 'all') {\n      newList[courseInfo.number] = {...courseInfo}\n    } else if (key === 'section') {\n      // check if the course is already in schedule\n      if (newList[courseInfo.number]) {\n          newList[courseInfo.number].sections[sectionNum] = courseInfo.sections[sectionNum]\n      } else {\n        newList[courseInfo.number] = {\n          ...courseInfo,\n          \"sections\": { [sectionNum]: courseInfo.sections[sectionNum] }\n        }\n      }\n    } else {\n      // check if the course is already in schedule\n      if (newList[courseInfo.number]) {\n        let sections = newList[courseInfo.number].sections;\n        //check if the section is already in schedule\n        if (sections[sectionNum]) {\n          sections[sectionNum].subsections[subSectionNum] = courseInfo.sections[sectionNum].subsections[subSectionNum];\n        }\n        else {\n          sections[sectionNum] = {\n            ...courseInfo.sections[sectionNum],\n            \"subsections\": { [subSectionNum]: courseInfo.sections[sectionNum].subsections[subSectionNum] }\n          }\n        }\n      } else {\n        newList[courseInfo.number] =\n        {\n          ...courseInfo,\n          \"sections\": {\n            [sectionNum]: {\n              ...courseInfo.sections[sectionNum],\n              \"subsections\": { [subSectionNum]: courseInfo.sections[sectionNum].subsections[subSectionNum] }\n            }\n          }\n        }\n      }\n    }\n    this.setState({ favList: newList })\n  }\n\n  render() {\n    const { navKey, allCourses, filteredCourses, favList } = this.state\n    return <div className='page'>\n        <div className='navBar'>\n          <img src={require('../img/logo3.svg')} height='80%' alt='logo'/>\n            <span className='navTitle'>{'Course Scheduler'}</span>\n            {\n                ['Search','Schedule'].map(item => (\n                    <div \n                        key={item}\n                        className= { navKey === item ? 'tabActive': 'tab' }\n                        onClick={()=>this.setState({ navKey: item })}>\n                            {item}\n                    </div>\n                ))\n            }\n        </div>\n\n        { \n          <div className='mainContent' style={{display: navKey === 'Search' ? 'flex' : 'none'}}>\n            <Search \n              favList = {favList}\n              allCourses ={allCourses}\n              filteredCourses={filteredCourses} \n              updateFilteredCourses={ (filteredCourses) => this.setState({ filteredCourses }) }\n              modifyFavList={ (operation, key, course, sectionNum, subSectionNum) => this.handleModifyFavList(operation, key, course, sectionNum, subSectionNum)} />  \n          </div>\n        }\n\n        { \n          <div className='mainContent' style={{display: navKey === 'Schedule' ? 'flex' : 'none'}}>\n            <Scheduler \n              favList={favList}\n              modifyFavList={ (operation, key, course, sectionNum, subSectionNum) => this.handleModifyFavList(operation, key, course, sectionNum, subSectionNum)}/> \n          </div>\n        }\n\n    </div>\n  }\n}\n\nexport default New;","import React from 'react'\n// import Old from './oldVersion/Old'\nimport New from './newVersion/New'\n// import old_screenshot from './img/old_screenshot.png'\n// import new_screenshot from './img/new_screenshot.png'\nimport './App.css'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // versionSwitch: -1,\n            // versionPreview: 0\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    // clickBoxContent(index) {\n    //     const boxes = document.getElementsByClassName('boxContent')\n    //     const { versionPreview } = this.state\n\n    //     if ( versionPreview !== index) {\n    //         for (let i = 0; i < boxes.length; i++) {\n    //             i === index\n    //             ? boxes[i].classList.add('view')\n    //             : boxes[i].classList.remove('view')\n    //         }\n    //         this.setState({ versionPreview: index })\n    //     }\n    // }\n\n    render() {\n\n        // const { versionSwitch, versionPreview } = this.state\n        let showVersion = null\n        // if (versionSwitch === 0) {\n            // showVersion = < Old />\n        // } else if (versionSwitch === 1) {\n            showVersion = < New />\n        // }\n\n        // const oldInfo = <>\n        //     - CS639 class project, finished in Fall 2019. <br /><br />\n        //     - I had no JS+CSS+HTML background before I took this class.\n        //     The final product had a rough structure design, a confusing human-computer interaction design and a flawed Algorithm logic design.<br /><br />\n        //     - This project was built with React and Bootstrap components. Basic UI design and prototyping was finished using Adobe XD <br /><br /> </>\n        // const newInfo = ''\n\n        return (\n            <>\n                {/* <div className='mainPage' style={{ display: versionSwitch === -1 ? '' : 'none' }}>\n                    <div className='content'>\n                        <div className='versionBox'>\n                            {\n                                [old_screenshot, new_screenshot].map((item, index) => {\n                                    let initClassName = index === 0 ? 'boxContent view' : 'boxContent'\n                                    return <div \n                                        key={item}\n                                        className={initClassName}\n                                        onClick={() => {}}>\n\n                                        <div className='versionTitle'>Course Scheduler</div>\n                                        <div\n                                            className='previewBox'\n                                            style={{ backgroundImage: `url(${item})` }}\n                                        >\n                                        </div>\n                                        <div className='text' onClick={()=>this.setState({ versionSwitch: index })}>\n                                            {index === 0 ? oldInfo : newInfo}\n                                            <span>CLICK TO VIEW</span>\n                                        </div>\n                                    </div> })\n                            }\n                        </div>\n                        <div className='notes'>\n                            {\n                                ['Old Version', 'New Version'].map((item, index) => (\n                                    <div \n                                        key={item}\n                                        className='note' \n                                        onClick={ ()=>this.clickBoxContent(index)}\n                                        style={{ \n                                            zIndex: versionPreview === index ? '20' : '0',\n                                            background: versionPreview === index ? 'rgba(255, 131, 131, 1)' : 'rgba(255, 131, 131, 0.6)',\n                                        }}>\n                                            {item}\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                </div> */}\n\n                {showVersion}\n\n            </>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}