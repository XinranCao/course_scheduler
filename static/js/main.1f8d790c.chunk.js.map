{"version":3,"sources":["img/logo3.svg","newVersion/searchComp/SideBar.js","newVersion/searchComp/CourseList.js","newVersion/searchComp/DetailInfo.js","newVersion/Search.js","newVersion/schedulerComp/FavList.js","newVersion/schedulerComp/Schedule.js","newVersion/Scheduler.js","newVersion/New.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SideBar","props","_useState","useState","_useState2","Object","slicedToArray","filterMode","setFilterMode","_useState3","_useState4","keywordList","setKeywordList","_useState5","_useState6","alertMsg","setAlertMsg","mode","useRef","keyword","myFormRef","keywordListBox","useEffect","current","style","boxShadow","includes","clientHeight","scrollHeight","react_default","a","createElement","className","id","ref","onChange","value","filterCourse","key","visibility","length","onClick","onSubmit","e","preventDefault","curr","newMsg","match","push","reset","addKeyword","ele","type","placeholder","autoComplete","display","onScroll","height","target","scrollTop","slice","reverse","map","item","index","splice","removeKeyword","CourseList","filteredCourses","courseSelected","selectCourse","resultNum","keys","courseList","_step","courseInfo","concat","toConsumableArray","document","getElementsByClassName","totalHeight","_iterator","createForOfIteratorHelper","s","n","done","err","f","_step2","_iterator2","values","course","number","name","credits","DetailInfo","showSections","setShowSections","favList","modifyFavList","findRequisite","sectionTbody","basicInfo","initBasicInfoShadow","thead","getElementById","trList","description","requisites","keywords","requisitesHeight","getTimeSpan","day","time","daySpan","monday","tuesday","wednesday","thursday","friday","toLowerCase","Fragment","split","showTip","text","show","littletip","innerText","left","clientX","top","clientY","courseAdded","cellSpacing","width","tbody","entries","sections","_ref","_ref2","section","sectionInfo","onMouseEnter","onMouseMove","onMouseLeave","replace","_ref3","_ref4","instructor","location","subsections","_ref5","_ref6","subsection","subsectionInfo","_ref7","_ref8","basicInfoBox","requisiteList","requisiteDiv","marginRight","getRequisiteDiv","Search","setCourseSelected","allCourses","updateFilteredCourses","searchComp_SideBar","courseKeywords","flag","indexOf","_step3","_iterator3","_step4","_iterator4","handleFilterCourses","searchComp_CourseList","handleSelectCourse","searchComp_DetailInfo","classList","requisite","handleFindRequisite","FavList","generateSchedule","showSecList","showSubSecList","selectedCourseList","state","setState","favListBox","newShowSecList","newShowSubSecList","course_sec","filter","newSelectedCourseList","JSON","parse","stringify","selectedCourse","selectedSec","selectedSubSec","getDay","Saturday","Sunday","toggleAllCourses","operation","newList","objectSpread2","modifyAllSelected","modifySelectedCourseList","sectionNum","subSectionNum","defineProperty","sectionObj","constructor","subsectionObj","_i","_Object$entries","_Object$entries$_i","_i2","_Object$entries2","_Object$entries2$_i","_i3","_Object$entries3","checkAllCoursesSelected","toggleShowSecList","toggleShowSubSecList","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","totalCretis","getTotalCredits","console","log","Schedule","scheduleList","currSchedule","boxHeight","calendar","tempList","_loop","tempSchedule","newSchedule","conflict","_loop2","_Object$entries3$_i","date","_hours$split","_hours$split2","start","end","every","checkConflict","_i4","_Object$entries4","_Object$entries4$_i","newScheduleWithSubsec","_loop3","_Object$entries5$_i","_Object$entries5","_i5","_hours$split3","_hours$split4","compareSec","start_1","Date","trim","getTime","end_1","start_2","end_2","convertTime","hour","Number","getDistance","handleSetCurrSchedule","nextSchedule","blur","test","parseInt","defaultValue","weekday","components","dayList","_i6","_Object$entries6","_Object$entries6$_i","classInfo","classNum","distances","getCourseBlock","Scheduler","setSelectedCourseList","schedulerComp_FavList","schedulerComp_Schedule","New","_this","classCallCheck","this","_super","call","navKey","subjects","schedule","ClassInfo","getSubjects","data","subject","_this2","_this$state","src","require","alt","zIndex","newVersion_Search","handleModifyFavList","newVersion_Scheduler","React","Component","App","showVersion","newVersion_New","Boolean","window","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f8d790c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo3.1180ff75.svg\";","import React, { useState, useEffect, useRef } from 'react';\nimport '../newVersion.css';\n\nfunction SideBar (props) {\n\n  const [filterMode, setFilterMode] = useState('intersection')\n  const [keywordList, setKeywordList] = useState([])\n  const[alertMsg, setAlertMsg] = useState('')\n  const mode = useRef(null);\n  const keyword = useRef(null)\n  let myFormRef = useRef(null)\n  const keywordListBox = useRef(null)\n\n  useEffect(()=>{\n    if (keywordListBox.current) {\n      if (keywordListBox.current.style.boxShadow.includes('0px 10px 12px -8px')) {return}\n      if (keywordListBox.current.clientHeight !== keywordListBox.current.scrollHeight) {\n        keywordListBox.current.style.boxShadow = 'inset 0 -10px 10px -8px #646569'\n      } else {\n        keywordListBox.current.style.boxShadow = 'none'\n      }\n    }\n  })\n\n  const keywordListScroll = (e) => {\n    const height = keywordListBox.current.scrollHeight - keywordListBox.current.clientHeight\n    if ( height > e.target.scrollTop && e.target.scrollTop ) {\n      keywordListBox.current.style.boxShadow = 'inset 0 -10px 10px -8px #646569, inset 0px 10px 12px -8px #646569'\n    } else if ( height > e.target.scrollTop ) {\n      keywordListBox.current.style.boxShadow = 'inset 0 -10px 10px -8px #646569'\n    } else if (e.target.scrollTop) {\n      keywordListBox.current.style.boxShadow = 'inset 0px 10px 12px -8px #646569'\n    } else {\n      keywordListBox.current.style.boxShadow = 'none'\n    }\n  }\n\n  const addKeyword = () => {\n    const curr = keyword.current.value;\n    let newMsg = ''\n\n    if (curr.match(/^\\s+$/) || curr.length === 0 ) {\n      newMsg = 'Please enter a keyword!'\n    } else if (keywordList.includes(curr)) {\n      newMsg = 'Keyword already added!'\n    } else if (curr.length > 15) {\n      newMsg = 'Please enter less than 16 characters!'\n    } else {\n      keywordList.push(curr);\n      setKeywordList(keywordList)\n      myFormRef.reset(); \n      props.filterCourse(keywordList, filterMode)\n    }\n    setAlertMsg(newMsg)\n  }\n\n  const removeKeyword = (index) => {\n    keywordList.splice(index, 1);\n    setKeywordList(keywordList)\n    props.filterCourse(keywordList, filterMode)\n  }\n     \n  return <div className='searchToolSec'>\n    <div className='sectionTitle'>Search for courses</div>\n    <div className='searchSetting'>\n      <div className='tagSetting'>\n        <span className='settingText'>Search mode</span>\n          <select \n            id='modeSelect' \n            ref={mode} \n            onChange={ () => {\n              setFilterMode(mode.current.value);\n              props.filterCourse(keywordList, mode.current.value)\n            }}>\n            <option key=\"intersection\" value='intersection'>Intersection of tags</option>\n            <option key=\"union\" value='union'>Union of tags</option>\n          </select>\n      </div>\n      <div className='tagInput'>\n        <span className='settingText'>Keyword</span>\n        <span \n            className='alert' \n            style={{ visibility: alertMsg.length ? \"visible\" : 'hidden' }} \n            onClick={ () => setAlertMsg('') } >\n                {alertMsg}\n        </span>\n        <form onSubmit={(e) => { e.preventDefault(); addKeyword() }} ref={(ele) => myFormRef = ele}>\n          <input id='keywordInput' type='text' placeholder=\"Enter keyword\" ref={keyword} autoComplete=\"off\"/>\n        </form>\n      </div>\n      <div className='chosenTags' style={{ display: keywordList.length !== 0 ? 'flex' : 'none' }}>\n        <span className='settingText'>Current keywords</span>\n        <div className='keywordList' ref={keywordListBox} onScroll={keywordListScroll}>\n          {\n            keywordList.slice().reverse().map((item,index)=>(\n              <div className='currentKeyword' key={item}>\n                {item}\n                <div \n                  className='removeBtn' \n                  onClick={ ()=>removeKeyword(keywordList.length-index-1)} >\n                    {`\\u2715`}\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  </div>\n}\n\nexport default SideBar;","import React, { useEffect, useRef }  from 'react';\nimport '../newVersion.css';\n\nfunction CourseList(props) {\n\n  const { filteredCourses, courseSelected, selectCourse } = props\n  const resultNum = Object.keys(filteredCourses).length\n  const courseList = useRef(null)\n\n  useEffect(()=>{\n    if (courseList.current) {\n      const courseInfo = [...document.getElementsByClassName('courseInfo'), ...document.getElementsByClassName('courseSelected')]\n      let totalHeight = 0\n      for ( const course of courseInfo ) {\n        totalHeight += course.clientHeight\n      }\n      if ( totalHeight > courseList.current.clientHeight ) {\n        courseList.current.style.boxShadow = 'inset 0 -10px 10px -8px #646569'\n      } else {\n        courseList.current.style.boxShadow = 'none'\n      }\n    }\n  },[filteredCourses])\n\n  const courseListScroll = (e) => {\n    const courseInfo = [...document.getElementsByClassName('courseInfo'), ...document.getElementsByClassName('courseSelected')]\n    let totalHeight = 0\n    for ( const course of courseInfo) {\n      totalHeight += course.clientHeight + 1\n    }\n    if ( totalHeight > (e.target.scrollTop + courseList.current.clientHeight) && e.target.scrollTop > 0 ) {\n      courseList.current.style.boxShadow = 'inset 0 -10px 10px -8px #646569, inset 0px 10px 12px -8px #646569'\n    } else if ( totalHeight > (e.target.scrollTop + courseList.current.clientHeight) ) {\n      courseList.current.style.boxShadow = 'inset 0 -10px 10px -8px #646569'\n    } else if ( e.target.scrollTop > 0 ) {\n      courseList.current.style.boxShadow = 'inset 0 10px 10px -8px #646569'\n    } else {\n      courseList.current.style.boxShadow = 'none'\n    }\n  }\n    \n  return <div className='courseListSec'>\n      <div className='sectionTitle'> {`${resultNum} result${resultNum>1?'s':''}`}</div>\n      <div className='courseList' ref={courseList} onScroll={courseListScroll}>\n        {\n          Object.values(filteredCourses).map((course, index) => (\n            <div \n              key={course.number}\n              className={ courseSelected === index ? 'courseSelected' : 'courseInfo' }\n              onClick={ () => selectCourse(index) }>\n              <div className='number'>{course.number}</div>\n              <div className='name'>{course.name}</div>\n              <div className='credits'>\n                <span className='creditNum'>{course.credits}</span>\n                {` credit${course.credits>1?'s':''}`}\n              </div>\n            </div>\n          ))\n        }\n      </div>\n  </div>\n}\n\nexport default CourseList;","import React, { useState, useEffect, useRef } from \"react\";\nimport '../newVersion.css';\n\nfunction DetailInfo (props) {\n\n  const [showSections, setShowSections] = useState(false)\n  const { courseInfo, favList, modifyFavList, findRequisite } = props\n\n  const sectionTbody = useRef(null)\n  const basicInfo = useRef(null)\n\n  useEffect(()=>{\n    initBasicInfoShadow()\n    setShowSections(false)\n  },[courseInfo])\n  \n  useEffect(()=>{\n    if (sectionTbody.current) {\n      const thead = document.getElementById('sectionThead')\n      const trList = document.getElementsByClassName('sectionTbodyTr')\n\n      let totalHeight = 0\n      for ( const tr of trList) {\n        totalHeight += tr.clientHeight\n      }\n\n      if (totalHeight + thead.clientHeight > sectionTbody.current.clientHeight  ) {\n        sectionTbody.current.style.boxShadow = 'inset 0 -6px 10px -8px #646569'\n      } else {\n        sectionTbody.current.style.boxShadow = 'none'\n      }\n    }\n    initBasicInfoShadow()\n\n  },[showSections])\n\n  const tableScoll = (e) => {\n    const tbody = document.getElementById('sectionTbody')\n    const thead = document.getElementById('sectionThead')\n    const trList = document.getElementsByClassName('sectionTbodyTr')\n    \n    let totalHeight = 0\n    for ( const tr of trList) {\n      totalHeight += tr.clientHeight\n    }\n\n    if (totalHeight - tbody.clientHeight + thead.clientHeight - e.target.scrollTop > 5 ) {\n      tbody.style.boxShadow = 'inset 0 -6px 10px -8px #646569'\n    } else {\n      tbody.style.boxShadow = 'none'\n    }\n    \n    if (e.target.scrollTop > 0) {\n      thead.style.boxShadow = '0px 6px 12px -8px #646569'\n    } else {\n      thead.style.boxShadow = 'none'\n    }\n  }\n\n  const initBasicInfoShadow = () => {\n    if (basicInfo.current) {\n      const description = document.getElementById('description')\n      const requisites = document.getElementById('requisites')\n      const keywords = document.getElementById('keywords')\n      const requisitesHeight = requisites ? requisites.clientHeight + 32 : 0\n      const contentHeight = description.clientHeight + requisitesHeight + keywords.clientHeight + 32\n\n      if ( contentHeight > basicInfo.current.clientHeight ) {\n        basicInfo.current.style.boxShadow = 'inset 0 -6px 10px -8px #646569'\n      } else {\n        basicInfo.current.style.boxShadow = 'none'\n      }\n    }\n  }\n\n  const basicInfoScroll = (e) => {\n    const basicInfoBox = document.getElementById('basicInfo')\n    const description = document.getElementById('description')\n    const requisites = document.getElementById('requisites')\n    const keywords = document.getElementById('keywords')\n    const requisitesHeight = requisites ? requisites.clientHeight + 32 : 0\n    const height = description.clientHeight + requisitesHeight + keywords.clientHeight + 32 - basicInfoBox.clientHeight\n\n    if ( height - e.target.scrollTop > 0 && e.target.scrollTop > 0) {\n      basicInfoBox.style.boxShadow = 'inset 0 -6px 10px -8px #646569, inset 0px 6px 12px -8px #646569'\n    } else if (height - e.target.scrollTop > 0) {\n      basicInfoBox.style.boxShadow = 'inset 0 -6px 10px -8px #646569'\n    } else if (e.target.scrollTop > 0) {\n      basicInfoBox.style.boxShadow = 'inset 0 6px 10px -8px #646569'\n    } else {\n      basicInfoBox.style.boxShadow = 'none'\n    }\n  }\n\n  const getRequisiteDiv = (requisites) => {\n    const requisiteList = findRequisite(requisites)\n    const requisiteDiv = (<div id='requisites' className='requisites'>\n      <span style={{ marginRight: '8px' }}> Pre-requisite:</span>\n      <div>\n        {\n          requisiteList.map( (item, index) => (\n            <span className='requisite' key={item}>\n              {index ? `, ${item}` : item}\n            </span>\n          ))\n        }\n        { '.' }\n      </div>\n    </div>\n    )\n    return requisiteList.length ? requisiteDiv : null\n  }\n\n  const getTimeSpan = (day, time) => {\n    const dayMap = {\n      'monday': 'Mon ',\n      'tuesday': 'Tue ',\n      'wednesday': 'Wed ',\n      'thursday': 'Thu ',\n      'friday': 'Fri ',\n    }\n    const daySpan = dayMap[day.toLowerCase()]\n\n    return <>\n      <span>{daySpan}</span>\n      <span>{time.split('-')[0]}</span>\n      <span>-</span>\n      <span>{time.split('-')[1]}</span>\n    </>\n  }\n\n  const showTip = (e,text,show) => {\n    const littletip = document.getElementById('addToListTip')\n    littletip.style.display = show ? 'flex' : 'none'\n    littletip.innerText = text === 'added' ? 'Already added to favorite list' : 'Add to favorite list'\n    if (e) {\n      littletip.style.left = `${e.clientX}px`\n      littletip.style.top = `${e.clientY - 42}px`\n    }\n  }\n\n  const courseAdded = favList[courseInfo.number]\n\n  return <div className='detailInfoSec'>\n    <div id='addToListTip' />\n    <div className='sectionTitle'>{courseInfo.number}</div>\n    {\n      Object.keys(courseInfo).length \n      ? <div className='detailInfo'>\n          <div className='titleArea'>\n            <div className='name'>\n              {courseInfo.name}\n              <div \n                className={ courseAdded ? 'favHeart_checked' : 'favHeart' }\n                onClick={ () => modifyFavList( courseAdded ? 'remove' : 'add', 'all', courseInfo, null, null) }/>\n            </div>\n            <div className='btns'>\n              <div \n                className={ showSections ? 'secHideBtn' : 'secShowBtn'} \n                onClick={ () => setShowSections(!showSections) }>\n                  {showSections ? 'Hide sections' : 'Show sections'}\n              </div>\n              <div \n                className={ courseAdded ? 'removeAll' : 'addAll' }  \n                onClick={ () => modifyFavList( courseAdded ? 'remove' : 'add', 'all', courseInfo, null, null) }>\n                  {courseAdded ? 'Remove from favorite' : 'Add all sections to favorite'}\n              </div>\n            </div>\n          </div>\n          <div className='sectionInfo' style={{ display: showSections?'flex':'none'}}>\n            <table className=\"sectionTable\" cellSpacing='0' width=\"100%\">\n              <tbody id='sectionTbody' ref={sectionTbody} onScroll={tableScoll} >\n                <tr id='sectionThead'>\n                  <td className='sectionTh'>Favorite</td>\n                  <td  className='sectionTh'>Sections</td>\n                  <td   className='sectionTh'>Time</td>\n                  <td className='sectionTh'>Instructor</td>\n                  <td  className='sectionTh'>Location</td>\n                </tr>\n                {\n                  Object.entries(courseInfo.sections).map(([section,sectionInfo]) => (\n                    <React.Fragment key={section}>\n                      <tr className='sectionTbodyTr'>\n                        {\n                          courseAdded && courseAdded.sections[section]\n                            ? <td \n                              className='sectionTd fav lec' \n                              onClick={() => {\n                                modifyFavList('remove', 'section', courseInfo, section, null);\n                                showTip(null,'notAdded',true)\n                              }}\n                              onMouseEnter={(e)=>showTip(e,'added',true)}\n                              onMouseMove={(e)=>showTip(e,'added',true)}\n                              onMouseLeave={(e)=>showTip(e,'added',false)}>\n                                <div className='favoriteBtn_checked'>✓</div>\n                            </td>\n                            : <td \n                              className='sectionTd fav lec' \n                              onClick={() => {\n                                modifyFavList('add', 'section', courseInfo, section, null);\n                                showTip(null,'added',true)\n                              }}\n                              onMouseEnter={(e)=>showTip(e,'notAdded',true)}\n                              onMouseMove={(e)=>showTip(e,'notAdded',true)}\n                              onMouseLeave={(e)=>showTip(e,'notAdded',false)}>\n                                <div className='favoriteBtn'>+</div>\n                            </td>\n                        }\n                          \n                        <td className='sectionTd lec'>{section.replace(\"_\", \" \")}</td>\n                        <td className='sectionTd lec'>\n                          {\n                            Object.entries(sectionInfo.time).map(([day,time]) => (\n                              <div className='timeTd' key={day+time}>\n                                {getTimeSpan(day, time)}\n                              </div>\n                            ))\n                          }\n                        </td>\n                        <td className='sectionTd lec'>{sectionInfo.instructor}</td>\n                        <td className='sectionTd lec'>{sectionInfo.location}</td>\n                      </tr>\n                      {\n                        Object.keys(sectionInfo.subsections).length === 0\n                          ? null\n                          : Object.entries(sectionInfo.subsections).map(([subsection,subsectionInfo]) => (\n                            <tr key={subsection} className='sectionTbodyTr'>\n                              {\n                                courseAdded \n                                && courseAdded.sections[section]\n                                && courseAdded.sections[section].subsections[subsection]\n                                  ? <td \n                                    className='sectionTd fav' \n                                    onClick={()=>{\n                                      modifyFavList('remove', 'subsection', courseInfo, section, subsection);\n                                      showTip(null,'notAdded',true)\n                                    }}\n                                    onMouseEnter={(e)=>showTip(e,'added',true)}\n                                    onMouseMove={(e)=>showTip(e,'added',true)}\n                                    onMouseLeave={(e)=>showTip(e,'added',false)}>\n                                      <div className='favoriteBtn_checked'>✓</div>\n                                  </td>\n                                  : <td \n                                    className='sectionTd fav' \n                                    onClick={()=>{\n                                      modifyFavList('add', 'subsection', courseInfo, section, subsection);\n                                      showTip(null,'added',true)\n                                    }}\n                                    onMouseEnter={(e)=>showTip(e,'notAdded',true)}\n                                    onMouseMove={(e)=>showTip(e,'notAdded',true)}\n                                    onMouseLeave={(e)=>showTip(e,'notAdded',false)}>\n                                      <div className='favoriteBtn'>+</div>\n                                  </td>\n                              }\n                              <td className='sectionTd'>{subsection.replace(\"_\", \" \")}</td>\n                              <td className='sectionTd'>\n                                {\n                                  Object.entries(subsectionInfo.time).map(([day,time]) => (\n                                      <div className='timeTd' key={day+time}>\n                                        {getTimeSpan(day, time)}\n                                      </div>\n                                  ))\n                                }\n                              </td>\n                              <td className='sectionTd'></td>\n                              <td className='sectionTd'>{subsectionInfo.location}</td>\n                            </tr>\n                          ))\n                      }\n                    </React.Fragment>\n                  ))\n                }\n              </tbody>\n            </table>\n          </div>\n          <div id='basicInfo' ref={basicInfo} className='basicInfo' onScroll={basicInfoScroll} style={{ display: showSections?'none':'block'}}>\n            <div id='description' className='description'>{courseInfo.description}</div>\n            { getRequisiteDiv(courseInfo.requisites) }\n            <div id='keywords' className='keywords'>\n              <span style={{ marginRight: '8px' }}>Keywords:</span>\n              <div>\n                {\n                  courseInfo.keywords.map((item, index) => (\n                    <span className='keyword' key={item}>\n                      {index ? `, ${item}` : item}\n                    </span>\n                  ))\n                }\n                {\".\"}\n              </div>\n            </div>\n          </div>\n        </div>\n      : null\n    }\n  </div>\n}\n\nexport default DetailInfo;","import React, { useState } from 'react';\nimport SideBar from './searchComp/SideBar';\nimport CourseList from './searchComp/CourseList';\nimport DetailInfo from './searchComp/DetailInfo';\nimport './newVersion.css';\n\nfunction Search (props) {\n\n  const [courseSelected, setCourseSelected] = useState(-1)\n\n  const { favList, filteredCourses, modifyFavList, allCourses, updateFilteredCourses } = props\n\n  const handleFilterCourses = (keywordList, mode) => {\n    let filteredCourses = []\n\n    if (!keywordList.length || !Object.values(allCourses).length) { \n      updateFilteredCourses(allCourses) \n      setCourseSelected(-1)\n      return;\n    }\n\n    Object.values(allCourses).map( course => {\n      let courseKeywords = []\n      course.keywords.map(item=>courseKeywords.push(item.toLowerCase()))\n      courseKeywords.push(course.name.toLowerCase(), course.number.toLowerCase())\n\n      if (mode === 'intersection') {  // intersection of keywords\n        let flag = true  // flag indicate whether currently all keywords are matched\n        for (const keyword of keywordList) {  // user entered keywords\n          let match = false // matchFlag indicator whether user entered keyword matches\n          for (const courseKeyword of courseKeywords) { // course keywords\n            if (courseKeyword.indexOf(keyword.toLowerCase()) !== -1) {  // if match at least one keyword\n              match = true;\n              break;\n            }\n          }\n          if (!match) {  // if some user entered keywords are not matched\n            flag = false  // becaue filter mode is \"intersection\", this couse doesn't meet condition\n            break;\n          }\n        }\n        if (flag) { filteredCourses.push(course) }  // if all user entered keywords are matched, add to list\n      \n      } else {  // union of keywords\n        for (const keyword of keywordList) {  // user entered keywords\n          let match = false // match flag\n          for (const courseKeyword of courseKeywords) { // course keywords\n            if (courseKeyword.indexOf(keyword.toLowerCase()) !== -1) {  // if match at least one keyword\n              filteredCourses.push(course)  //  push the course into the filtered course list\n              match = true\n              break;  // because filter mode is \"union\", no need to check other keywords\n            }\n          }\n          if (match) { break; } // because filter mode is \"union\", no need to check other keywords\n        }\n      }\n      return null\n    })\n    updateFilteredCourses(filteredCourses)\n    setCourseSelected(-1)\n  }\n\n  const handleSelectCourse = (index) => {\n    const newIndex = courseSelected === index ? -1 : index\n    setCourseSelected(newIndex)\n  }\n\n  const handleFindRequisite = (requisiteList) => {\n    const classList = []\n    requisiteList.map( requisite => {\n      requisite.map( item => {\n        classList.push(allCourses[item].number ); return null\n      })\n      return null\n    })\n    return classList\n  }\n  return <>\n    <SideBar filterCourse={ (keywordList, mode) => handleFilterCourses(keywordList, mode) } />\n    <CourseList \n      filteredCourses={filteredCourses} \n      courseSelected={courseSelected} \n      selectCourse={ index => handleSelectCourse(index) } />\n    <DetailInfo \n      favList = {favList}\n      modifyFavList = {modifyFavList}\n      courseInfo={ courseSelected < 0 ? {} : Object.values(filteredCourses)[courseSelected] }\n      findRequisite={ requisiteList => handleFindRequisite(requisiteList) } />\n  </>\n}\n\nexport default Search;","import React, { useState, useEffect, useRef } from 'react';\nimport '../newVersion.css';\n\nfunction FavList(props) {  \n\n  const { favList, modifyFavList, generateSchedule } = props\n\n  const [state, setState] = useState({\n    showSecList: [],\n    showSubSecList: [],\n    selectedCourseList: {}\n  })\n  const favListBox = useRef(null)\n\n  useEffect(()=>{\n    if (favListBox.current) {\n      if (favListBox.current.style.boxShadow.includes('0px 10px 12px -8px')) {return}\n      if (favListBox.current.clientHeight !== favListBox.current.scrollHeight) {\n        favListBox.current.style.boxShadow = 'inset 0 -10px 10px -8px #646569'\n      } else {\n        favListBox.current.style.boxShadow = 'none'\n      }\n    }\n  },[favList])\n\n  const favListScroll = (e) => {\n    const height = favListBox.current.scrollHeight - favListBox.current.clientHeight\n    if ( height > e.target.scrollTop && e.target.scrollTop ) {\n      favListBox.current.style.boxShadow = 'inset 0 -10px 10px -8px #646569, inset 0px 10px 12px -8px #646569'\n    } else if ( height > e.target.scrollTop ) {\n      favListBox.current.style.boxShadow = 'inset 0 -10px 10px -8px #646569'\n    } else if (e.target.scrollTop) {\n      favListBox.current.style.boxShadow = 'inset 0px 10px 12px -8px #646569'\n    } else {\n      favListBox.current.style.boxShadow = 'none'\n    }\n  }\n\n  useEffect(()=>{\n    let newShowSecList = []\n    let newShowSubSecList = []\n\n    state.showSecList.map( course => {\n      if (Object.keys(favList).includes(course)) {\n        newShowSecList = [...state.showSecList]\n        state.showSubSecList.map( course_sec => {\n          if (!Object.keys(favList[course].sections).includes(course_sec.split('-')[1])) {\n            newShowSubSecList = state.showSubSecList.filter( e => e !== course_sec )\n          } else {\n            newShowSubSecList = [...state.showSubSecList]\n          }\n          return null\n        })\n      } else {\n        newShowSecList = state.showSecList.filter( e => e !== course )\n        newShowSubSecList = state.showSubSecList.filter( e => e.indexOf(course) < 0 )\n      }\n      return null\n    })\n\n    let newSelectedCourseList = JSON.parse(JSON.stringify(state.selectedCourseList))\n\n    Object.entries(state.selectedCourseList).map( ([selectedCourse, courseInfo]) => {\n      if( Object.keys(favList).includes(selectedCourse) ) {\n        Object.entries(courseInfo.sections).map(([ selectedSec, sectionInfo ])=>{\n          if(Object.keys(favList[selectedCourse].sections).includes(selectedSec)) {\n            Object.entries(sectionInfo.subsections).map(([ selectedSubSec ])=>{\n              if(!Object.keys(favList[selectedCourse].sections[selectedSec].subsections).includes(selectedSubSec)) {\n                delete newSelectedCourseList[selectedCourse].sections[selectedSec].subsections[selectedSubSec]\n              }\n              return null\n            })\n          } else {\n            delete newSelectedCourseList[selectedCourse].sections[selectedSec]\n          }\n          return null\n        })\n      } else {\n        delete newSelectedCourseList[selectedCourse]\n      }\n      return null\n    })\n\n    setState({ \n      showSecList: newShowSecList,\n      showSubSecList: newShowSubSecList,\n      selectedCourseList: newSelectedCourseList\n    })\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [favList])\n\n  const modifyAllSelected = (operation) => {\n    let newList = {}\n    if (operation === 'add') {\n      newList = JSON.parse(JSON.stringify(favList))\n    }\n    setState({ ...state, selectedCourseList: newList })\n  }\n\n  const toggleShowSecList = (course) => {\n    if( state.showSecList.indexOf(course) < 0 ) {\n      setState({\n        ...state,\n        showSecList: [...state.showSecList, course]\n      })\n    } else {\n      setState({\n        ...state,\n        showSecList: state.showSecList.filter( e => e !== course ),\n        showSubSecList: state.showSubSecList.filter( e => e.indexOf(course) < 0 )\n      })\n    }\n  }\n\n  const toggleShowSubSecList = (course, section) => {\n    const course_sec = course + '-' + section\n    if( state.showSubSecList.indexOf(course_sec) < 0 ) {\n      setState({\n        ...state,\n        showSubSecList: [...state.showSubSecList, course_sec]\n      })\n    } else {\n      setState({\n        ...state,\n        showSubSecList: state.showSubSecList.filter( e => e !== course_sec )\n      })\n    }\n  }\n    \n  const getDay = (day) => {\n    const dayMap = {\n      'monday': 'Mon ',\n      'tuesday': 'Tue ',\n      'wednesday': 'Wed ',\n      'thursday': 'Thu ',\n      'friday': 'Fri ',\n      'Saturday': 'Sat ',\n      'Sunday': 'Sun '\n    }\n    return dayMap[day.toLowerCase()]\n  }\n\n  const toggleAllCourses = (operation) => {\n    modifyAllSelected(operation)\n  }\n\n  const checkAllCoursesSelected = () => {\n    let flag = true\n    for (const [course, courseInfo] of Object.entries(favList) ) {\n      const courseSelected = state.selectedCourseList[course]\n      if (!courseSelected) {\n        flag = false\n        return\n      }\n      for (const [section, sectionInfo] of Object.entries(courseInfo.sections)) {\n        if (!state.selectedCourseList[course].sections[section]) {\n          flag = false\n          return\n        }\n        for (const [subsection] of Object.entries(sectionInfo.subsections)) {\n          if (!state.selectedCourseList[course].sections[section].subsections[subsection]) {\n            flag = false\n            return\n          }\n        }\n      }\n    }\n    return flag\n  }\n\n  const modifySelectedCourseList = (operation, key, course, sectionNum, subSectionNum) => {\n\n    const courseInfo = JSON.parse(JSON.stringify(course))\n    const newList = JSON.parse(JSON.stringify(state.selectedCourseList))\n\n    if (operation === 'remove') {\n      if (key === 'all') {\n        // delete whole course\n        delete newList[courseInfo.number];\n      } else if (key === 'section') {\n        // delete section\n        delete newList[courseInfo.number].sections[sectionNum];\n        var sectionObj = newList[courseInfo.number].sections;\n        // when all sections are deleted, delete the course\n        if (Object.entries(sectionObj).length === 0 && sectionObj.constructor === Object) {\n          delete newList[courseInfo.number];\n        }\n      } else {\n        // delete subsection\n        delete newList[courseInfo.number].sections[sectionNum].subsections[subSectionNum];\n        var subsectionObj = newList[courseInfo.number].sections[sectionNum].subsections;\n        // when all subsections are deleted, delete the section\n        if (Object.entries(subsectionObj).length === 0 && subsectionObj.constructor === Object) {\n          delete newList[courseInfo.number].sections[sectionNum];\n          let sectionObj = newList[courseInfo.number].sections;\n          // when all ections a deleted, delete the course\n          if (Object.entries(sectionObj).length === 0 && sectionObj.constructor === Object)\n            delete newList[courseInfo.number];\n        }\n      }\n      setState({ ...state, selectedCourseList: newList })\n      return\n    }\n\n    if (key === 'all') {\n      newList[courseInfo.number] = {...courseInfo}\n    } else if (key === 'section') {\n      // check if the course is already in schedule\n      if (newList[courseInfo.number]) {\n          (newList[courseInfo.number].sections)[sectionNum] = courseInfo.sections[sectionNum]\n      } else {\n        newList[courseInfo.number] = {\n          ...courseInfo,\n          \"sections\": { [sectionNum]: courseInfo.sections[sectionNum] }\n        }\n      }\n    } else {\n      // check if the course is already in schedule\n      if (newList[courseInfo.number]) {\n        let sections = newList[courseInfo.number].sections;\n        //check if the section is already in schedule\n        if (sections[sectionNum]) {\n          sections[sectionNum].subsections[subSectionNum] = courseInfo.sections[sectionNum].subsections[subSectionNum];\n        }\n        else {\n          sections[sectionNum] = {\n            ...courseInfo.sections[sectionNum],\n            \"subsections\": { [subSectionNum]: courseInfo.sections[sectionNum].subsections[subSectionNum] }\n          }\n        }\n      } else {\n        newList[courseInfo.number] =\n        {\n          ...courseInfo,\n          \"sections\": {\n            [sectionNum]: {\n              ...courseInfo.sections[sectionNum],\n              \"subsections\": { [subSectionNum]: courseInfo.sections[sectionNum].subsections[subSectionNum] }\n            }\n          }\n        }\n      }\n    }\n    setState({ ...state, selectedCourseList: newList })\n  }\n\n  const getTotalCredits = () => {\n    let totalCretis = 0\n    Object.values(state.selectedCourseList).map(courseInfo => {\n      totalCretis += courseInfo.credits\n      return null\n    })\n    return totalCretis\n  }\n\n  return <div className='favListSec'>\n    <div className='sectionTitle'>Favorite List</div> \n    { \n      Object.values(favList).length ? \n        checkAllCoursesSelected()\n          ? <div className='selectAll' onClick={ () => toggleAllCourses('remove') }>\n              <div className='checkBtn_checked'> ✓ </div>\n              <span>Unselect all</span>\n          </div>\n          : <div className='selectAll' onClick={ () => toggleAllCourses('add') }>\n              <div className='checkBtn'/>\n              <span>Select all</span>\n          </div> \n      : <div className='selectAll' />\n    }\n    <div className='favList' ref={favListBox} onScroll={favListScroll} >\n      <span \n        className='noCourseTip' \n        style={{ display: Object.values(favList).length\n                          ?'none' : 'flex'\n        }}>Currently no course in list</span>\n      {\n        Object.values(favList).map( course => {\n          const courseSelected = state.selectedCourseList[course.number]\n          return <React.Fragment key={course.number}>\n            <div className='favCourse'>\n              <div \n                className={ courseSelected ? 'checkBtn_checked' : 'checkBtn' }  \n                onClick={ () => modifySelectedCourseList( courseSelected ? 'remove' : 'add', 'all', course, null, null) }>\n                  {courseSelected ? '✓' : ''}\n              </div>\n              <div \n                className={ state.showSecList.includes(course.number) ? 'showSectionBtn' : 'showSectionBtn_active' }\n                onClick={()=>toggleShowSecList(course.number)}>\n                  {state.showSecList.includes(course.number) ? 'Hide sections' : 'Show sections'}\n              </div>\n              <div className='number'>{course.number}</div>\n              <div className='credits'>\n                <span className='creditNum'>{course.credits}</span>\n                {` credit${course.credits>1?'s':''}`}\n              </div>\n              <div \n                className='removeBtn' \n                onClick={()=>{\n                  modifyFavList( 'remove', 'all', course, null, null);\n                } }>Remove</div>\n            </div>\n            {\n              state.showSecList.includes(course.number) ? \n                Object.entries(course.sections).map(([section,sectionInfo]) => (\n                  <React.Fragment key={section}>\n                    <div className='favSecInfo' >\n                      {\n                        courseSelected && courseSelected.sections[section]\n                        ? <div \n                          className='checkBtn_checked'\n                          onClick={ () => modifySelectedCourseList( 'remove', 'section', course, section, null) }> ✓ </div>\n                        : <div \n                          className='checkBtn'\n                          onClick={ () => modifySelectedCourseList( 'add', 'section', course, section, null) }/>\n                      }\n                      {\n                        Object.keys(sectionInfo.subsections).length !== 0\n                        ? <div \n                            className={ state.showSubSecList.includes(course.number + '-' + section) ? 'showSectionBtn' : 'showSectionBtn_active' }\n                            onClick={()=>toggleShowSubSecList(course.number, section)}>\n                              {state.showSubSecList.includes(course.number + '-' + section) ? 'Hide subsections' : 'Show subsections'}\n                          </div>\n                        : null\n                      }\n                      <div className='number'>{section}</div>\n                      <div className='timeArea'>\n                        {\n                          Object.entries(sectionInfo.time).map(([day,time]) => (\n                            <span className='time' key={day+time}>{getDay(day)}{time}</span>\n                          ))\n                        }\n                      </div>\n                      <div \n                        className='removeBtn' \n                        onClick={()=>{\n                          modifyFavList( 'remove', 'section', course, section, null);\n                        }}>Remove</div>\n                    </div>\n                    {\n                      state.showSubSecList.includes(course.number + '-' + section) ? \n                        Object.entries(sectionInfo.subsections).map(([subsection,subsectionInfo]) => (\n                          <div className='favSubSecInfo' key={subsection}>\n                            {\n                              courseSelected \n                              && courseSelected.sections[section]\n                              && courseSelected.sections[section].subsections[subsection]\n                              ? <div \n                                className='checkBtn_checked'\n                                onClick={ () => modifySelectedCourseList( 'remove', 'subsection', course, section, subsection) }> ✓ </div>\n                              : <div \n                                className='checkBtn'\n                                onClick={ () => modifySelectedCourseList( 'add', 'subsection', course, section, subsection) }/>\n                            }\n                            <div className='number'>{subsection}</div>\n                            <div className='timeArea'>\n                              {\n                                Object.entries(subsectionInfo.time).map(([day,time]) => (\n                                  <span className='time' key={day+time}>{getDay(day)}{time}</span>\n                                ))\n                              }\n                            </div>\n                            <div \n                              className='removeBtn' \n                              onClick={()=>{\n                                modifyFavList( 'remove', 'subsection', course, section, subsection);\n                              } }>Remove</div>\n                          </div>\n                        )) : null\n                    }\n                  </React.Fragment>\n                )) : null\n              }\n          </React.Fragment>\n        })\n      }\n    </div>\n    <div className='footer'>\n      <div className='info'>\n        <div>\n          Selected \n          <span>{Object.values(state.selectedCourseList).length}</span> \n          {Object.values(state.selectedCourseList).length > 1 ? 'classes' : 'class'}\n          </div>\n        <div>Total credits: <span>{getTotalCredits()}</span></div>\n      </div>\n      <div className='settingBtn'></div>\n      <div\n        className = { Object.values(state.selectedCourseList).length ? 'generateBtn' : 'generateBtn_disabled' }\n        onClick={ ()=>{\n          Object.values(state.selectedCourseList).length \n            ? generateSchedule(state.selectedCourseList) \n            : console.log('no course selected')}}>\n        Generate Schedule\n      </div>\n    </div>\n  </div>\n}\n\nexport default FavList;","import React, { useEffect, useState, useRef } from 'react';\nimport '../newVersion.css';\n\nfunction Schedule(props) {\n\n  const [state, setState] = useState({\n    scheduleList: [],\n    currSchedule: 0,\n    boxHeight: 0\n  })\n\n  const { selectedCourseList } = props\n  const { scheduleList, currSchedule, boxHeight } = state\n  const keyword = useRef(null)\n  let myFormRef = useRef(null)\n  const calendar = useRef(null)\n  const timeLine = ['7:00 am', '8:00 am', '9:00 am', '10:00 am', '11:00 am', '12:00 pm', '1:00 pm', \n    '2:00 pm', '3:00 pm', '4:00 pm', '5:00 pm', '6:00 pm', '7:00 pm', '8:00 pm', '9:00 pm']\n\n  useEffect(()=>{\n    if (calendar.current) {\n      if (calendar.current.style.boxShadow.includes('0px 10px 12px -8px')) {return}\n      if (calendar.current.clientHeight !== calendar.current.scrollHeight) {\n        calendar.current.style.boxShadow = 'inset 0 -10px 10px -8px #646569'\n      } else {\n        calendar.current.style.boxShadow = 'none'\n      }\n    }\n  },)\n\n  const calendarScroll = (e) => {\n      const height = calendar.current.scrollHeight - calendar.current.clientHeight\n      if ( height > e.target.scrollTop && e.target.scrollTop ) {\n        calendar.current.style.boxShadow = 'inset 0 -10px 10px -8px #646569'\n      } else {\n        calendar.current.style.boxShadow = 'none'\n      }\n\n      for ( const weekday of document.getElementsByClassName('weekday') ) {\n        weekday.style.top = `${e.target.scrollTop - 16}px`\n        weekday.style.boxShadow = e.target.scrollTop > 16 ? '0px 10px 12px -8px #646569' : 'none'\n        weekday.style.top = `${e.target.scrollTop - 16}px`\n      }\n  }\n\n  useEffect(()=>{\n    let tempList = []\n\n    for ( const [course, courseInfo] of Object.entries(selectedCourseList) ) {\n\n      if (!tempList.length) {\n        tempList.push({\n          'monday': {},\n          'tuesday': {},\n          'wednesday': {},\n          'thursday': {},\n          'friday': {},\n        })\n      }\n      let newList = []\n\n      tempList.map( tempSchedule => {\n        for ( const [section, sectionInfo] of Object.entries(courseInfo.sections) ) {\n\n          let newSchedule = JSON.parse(JSON.stringify(tempSchedule))\n          let conflict = false\n\n          for ( const [date, hours] of Object.entries(sectionInfo.time) ) {\n\n            let [start, end] = hours.split('-')\n\n            if ( Object.values(newSchedule[date]).every( item => checkConflict( item, [start, end] )) ) {\n\n              newSchedule[date][ course + '-' + section ] = {\n                'instructor': sectionInfo.instructor,\n                'location': sectionInfo.location,\n                'time': {\n                  'start': start,\n                  'end': end\n                }\n              }\n            } else {\n              conflict = true\n            }\n          }\n\n          if (conflict) {\n            continue;\n          } else if ( !Object.keys(sectionInfo.subsections).length ) {\n            newList.push(newSchedule)\n            continue;\n          }\n\n          for ( const [subsection, subsectionInfo] of Object.entries(sectionInfo.subsections) ) {\n            let newScheduleWithSubsec = JSON.parse(JSON.stringify(newSchedule))\n            for ( const [date, hours] of Object.entries(subsectionInfo.time) ) {\n\n              let [start, end] = hours.split('-')\n\n              if ( Object.values(newScheduleWithSubsec[date]).every( item => checkConflict( item, [start, end] )) ) {\n\n                newScheduleWithSubsec[date][ course + '-' + section + '-' + subsection ] = {\n                  'instructor': sectionInfo.instructor,\n                  'location': subsectionInfo.location,\n                  'time': {\n                    'start': start,\n                    'end': end\n                  }\n                }\n                conflict = false\n              } else {\n                conflict = true\n              }\n            }\n            if (!conflict) {\n              newList.push(newScheduleWithSubsec)\n            }\n          }\n        }\n        return null\n      })\n      tempList = [...newList]\n    }\n\n    if (myFormRef.current !== null) {\n      myFormRef.current.reset() \n    }  else {\n    }\n    // const pageForm = document.getElementById('pageForm').reset()\n    setState({\n      scheduleList: tempList,\n      currSchedule: 0,\n      boxHeight: document.getElementsByClassName('scheduleSec')[0].clientHeight - 80\n    }) \n  },[selectedCourseList])\n\n  const checkConflict = (compareSec, [start, end]) => {\n\n    const start_1 = new Date(\"01/01/2000 \" + start.trim().slice(0, -2) + \" \" + start.trim().slice(-2)).getTime()\n    const end_1 = new Date(\"01/01/2000 \" + end.trim().slice(0, -2) + \" \" + end.trim().slice(-2)).getTime()\n\n    const start_2 = new Date(\"01/01/2000 \" + compareSec.time.start.trim().slice(0, -2) + \" \" + compareSec.time.start.trim().slice(-2)).getTime()\n    const end_2 = new Date(\"01/01/2000 \" + compareSec.time.end.trim().slice(0, -2) + \" \" + compareSec.time.end.trim().slice(-2)).getTime()\n\n    if (end_1 < start_2 || start_1 > end_2 ) {\n      return true\n    }\n    return false\n  }\n\n  const getDay = (day) => {\n    const dayMap = {\n      'monday': 'Mon. ',\n      'tuesday': 'Tue. ',\n      'wednesday': 'Wed. ',\n      'thursday': 'Thu. ',\n      'friday': 'Fri. ',\n    }\n    return dayMap[day.toLowerCase()]\n  }\n\n  const convertTime = (time) => {\n    let hour = Number(time.split(':')[0])\n    if (time.includes('pm') && (hour !== 12)) {\n      hour += 12;\n    }\n    let minute = Number(time.split(':')[1].trim().slice(0, -2));\n    return hour + minute / 60;\n  }\n\n  const getDistance = (start, end) => {\n    const top = 56 + 800 * ((convertTime(start) - convertTime('7:30am')) / (convertTime('9:00pm') - convertTime('7:30am')))\n    const bottom = 56 + 800 * ((convertTime(end) - convertTime('7:30am')) / (convertTime('9:00pm') - convertTime('7:30am')))\n    return [top, bottom]\n  }\n\n  const getCourseBlock = (weekday) => {\n    let components = []\n    if (!scheduleList.length){ return null}\n    const dayList = scheduleList[currSchedule][weekday]\n\n    for ( const [number, classInfo] of Object.entries(dayList)) {\n      const classNum = number.split('-')\n      const distances = getDistance(classInfo.time.start, classInfo.time.end)\n      components.push(\n        <div \n          key={number} \n          className='classCard' \n          style={{ \n            height: `${distances[1] - distances[0]}px`, \n            top: `${distances[0]}px`\n          }}>\n          <span>{`${classNum[0]}`}</span>\n          <span>{`${classNum[classNum.length - 1]}`}</span>\n          <span>{`${classInfo.time.start} - ${classInfo.time.end}`}</span>\n        </div>\n      )\n    }\n\n    return components\n  }\n\n  const handleSetCurrSchedule = (operation, number) => {\n    let nextSchedule = -1\n\n    if (operation === 'jump') {\n\n      document.getElementById('pageNum').blur()\n      myFormRef.current.reset() \n\n      if (!/^[0-9]*$/.test(number)) {\n        console.log('not number', number)\n        return\n      }\n\n      if (number <= scheduleList.length) { \n        nextSchedule =  parseInt(number) - 1 \n      }\n      \n    } else if (operation === 'prev') {\n      if (currSchedule > 0) { \n        myFormRef.current.reset()\n        nextSchedule = currSchedule - 1 ;\n      }\n    } else if (operation === 'next') {\n      if (currSchedule < scheduleList.length - 1) { \n        myFormRef.current.reset()\n        nextSchedule = currSchedule + 1 ;\n      }\n    } else {\n      return \n    }\n\n    if (nextSchedule < 0) { return }\n    setState({\n      ...state,\n      currSchedule: nextSchedule\n    })\n  }\n\n  return <div className='scheduleSec'>\n    <div className='sectionTitle'>\n      Schedules\n      {\n        Object.keys(selectedCourseList).length\n          ? scheduleList.length\n            ? <div className='pagination'>\n              <div \n                id = 'prevbtn'\n                className={ currSchedule > 0 ? 'controlBtn' : 'controlBtn_disabled' }\n                onClick={()=>handleSetCurrSchedule('prev', null)}>{'<'}</div>\n              <div className='pageNum'>\n                <form id='pageForm' onSubmit={(e) => { e.preventDefault(); handleSetCurrSchedule('jump', keyword.current.value) }} ref={myFormRef}>\n                  <input id='pageNum' type='text' defaultValue={currSchedule + 1} ref={keyword} autoComplete=\"off\"/>\n                </form>\n                {'/ '}\n                <span>{scheduleList.length}</span>\n              </div>\n              <div \n                id = 'nextbtn'\n                className={ currSchedule < scheduleList.length - 1 ? 'controlBtn' : 'controlBtn_disabled' }\n                onClick={()=>handleSetCurrSchedule('next', null)}>{'>'}</div>\n            </div>\n            : <div className='pagination'>No possible schedule</div>\n          : null\n      }\n    </div>\n    {\n      scheduleList.length \n        ? <div className='calendar' ref={calendar} onScroll={calendarScroll}>\n          {\n            ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'].map( weekday => (\n              <div className='weekdayArea' key={weekday}>\n                <div className='weekday'>{getDay(weekday)}</div>\n                { getCourseBlock(weekday) }\n              </div>\n            ))\n          }\n          {\n            timeLine.map( item => {\n              const top = getDistance(item, item)[0]\n              return <React.Fragment key={item}>\n                <div className='timeTip' style={{ top: `${top + 4}px`}}>{item}</div>\n                <div  className='timeLine' style={{ top: `${top + 16}px`}}/>\n              </React.Fragment>\n            })\n          }\n        </div> : null\n    }\n  </div>\n}\n\nexport default Schedule;","import React, { useState } from 'react';\nimport FavList from './schedulerComp/FavList'\nimport Schedule from './schedulerComp/Schedule'\nimport './newVersion.css';\n\nfunction Scheduler (props) {\n\n  const { favList, modifyFavList } = props\n\n  const [selectedCourseList, setSelectedCourseList] = useState({})\n\n  return <>\n    <FavList\n      favList = {favList} \n      modifyFavList = {modifyFavList}\n      generateSchedule = {setSelectedCourseList} />\n    <Schedule selectedCourseList={selectedCourseList}/>\n  </>\n}\n\nexport default Scheduler;","import React from 'react';\nimport Search from './Search';\nimport Scheduler from './Scheduler';\nimport './newVersion.css';\nimport ClassInfo from '../ClassInfo.json';\n\nclass New extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        navKey: 'Search',\n        allCourses: {},\n        filteredCourses: {},\n        favList: {},\n        subjects: [],\n        schedule: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ \n      allCourses: ClassInfo, \n      filteredCourses: ClassInfo, \n      subjects: this.getSubjects(ClassInfo) \n    })\n  }\n\n  getSubjects(data) {\n    let subjects = [];\n    subjects.push(\"All\");\n    Object.values(data).map( item => (\n      subjects.includes(item.subject) ? null : subjects.push(item.subject) \n    ))\n    return subjects;\n  }\n\n  handleModifyFavList(operation, key, course, sectionNum, subSectionNum) {\n    const { favList } = this.state\n\n    const courseInfo = JSON.parse(JSON.stringify(course))\n    const newList = JSON.parse(JSON.stringify(favList))\n\n    if (operation === 'remove') {\n      if (key === 'all') {\n        // delete whole course\n        delete newList[courseInfo.number];\n      } else if (key === 'section') {\n        // delete section\n        delete newList[courseInfo.number].sections[sectionNum];\n        var sectionObj = newList[courseInfo.number].sections;\n        // when all sections are deleted, delete the course\n        if (Object.entries(sectionObj).length === 0 && sectionObj.constructor === Object) {\n          delete newList[courseInfo.number];\n        }\n      } else {\n        // delete subsection\n        delete newList[courseInfo.number].sections[sectionNum].subsections[subSectionNum];\n        var subsectionObj = newList[courseInfo.number].sections[sectionNum].subsections;\n        // when all subsections are deleted, delete the section\n        if (Object.entries(subsectionObj).length === 0 && subsectionObj.constructor === Object) {\n          delete newList[courseInfo.number].sections[sectionNum];\n          let sectionObj = newList[courseInfo.number].sections;\n          // when all ections a deleted, delete the course\n          if (Object.entries(sectionObj).length === 0 && sectionObj.constructor === Object)\n            delete newList[courseInfo.number];\n        }\n      }\n      this.setState({ favList: newList })\n      return\n    }\n\n    if (key === 'all') {\n      newList[courseInfo.number] = {...courseInfo}\n    } else if (key === 'section') {\n      // check if the course is already in schedule\n      if (newList[courseInfo.number]) {\n          newList[courseInfo.number].sections[sectionNum] = courseInfo.sections[sectionNum]\n      } else {\n        newList[courseInfo.number] = {\n          ...courseInfo,\n          \"sections\": { [sectionNum]: courseInfo.sections[sectionNum] }\n        }\n      }\n    } else {\n      // check if the course is already in schedule\n      if (newList[courseInfo.number]) {\n        let sections = newList[courseInfo.number].sections;\n        //check if the section is already in schedule\n        if (sections[sectionNum]) {\n          sections[sectionNum].subsections[subSectionNum] = courseInfo.sections[sectionNum].subsections[subSectionNum];\n        }\n        else {\n          sections[sectionNum] = {\n            ...courseInfo.sections[sectionNum],\n            \"subsections\": { [subSectionNum]: courseInfo.sections[sectionNum].subsections[subSectionNum] }\n          }\n        }\n      } else {\n        newList[courseInfo.number] =\n        {\n          ...courseInfo,\n          \"sections\": {\n            [sectionNum]: {\n              ...courseInfo.sections[sectionNum],\n              \"subsections\": { [subSectionNum]: courseInfo.sections[sectionNum].subsections[subSectionNum] }\n            }\n          }\n        }\n      }\n    }\n    this.setState({ favList: newList })\n  }\n\n  render() {\n    const { navKey, allCourses, filteredCourses, favList } = this.state\n    return <div className='page'>\n      <div className='navBar'>\n        <img src={require('../img/logo3.svg')} height='80%' alt='logo'/>\n          <span className='navTitle'>{'Course Scheduler'}</span>\n          {\n              ['Search','Schedule'].map(item => (\n                  <div \n                      key={item}\n                      className= { navKey === item ? 'tabActive': 'tab' }\n                      onClick={()=>this.setState({ navKey: item })}>\n                          {item}\n                  </div>\n              ))\n          }\n      </div>\n      { \n        <div className='mainContent' style={{zIndex: navKey === 'Search' ? '100' : '0'}}>\n          <Search \n            favList = {favList}\n            allCourses ={allCourses}\n            filteredCourses={filteredCourses} \n            updateFilteredCourses={ (filteredCourses) => this.setState({ filteredCourses }) }\n            modifyFavList={ (operation, key, course, sectionNum, subSectionNum) => this.handleModifyFavList(operation, key, course, sectionNum, subSectionNum)} />  \n        </div>\n      }\n\n      { \n        <div className='mainContent' style={{zIndex: navKey === 'Schedule' ? '100' : '0'}}>\n          <Scheduler \n            favList={favList}\n            modifyFavList={ (operation, key, course, sectionNum, subSectionNum) => this.handleModifyFavList(operation, key, course, sectionNum, subSectionNum)}/> \n        </div>\n      }\n    </div>\n  }\n}\n\nexport default New;","import React from 'react'\n// import Old from './oldVersion/Old'\nimport New from './newVersion/New'\n// import old_screenshot from './img/old_screenshot.png'\n// import new_screenshot from './img/new_screenshot.png'\nimport './App.css'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // versionSwitch: -1,\n            // versionPreview: 0\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    // clickBoxContent(index) {\n    //     const boxes = document.getElementsByClassName('boxContent')\n    //     const { versionPreview } = this.state\n\n    //     if ( versionPreview !== index) {\n    //         for (let i = 0; i < boxes.length; i++) {\n    //             i === index\n    //             ? boxes[i].classList.add('view')\n    //             : boxes[i].classList.remove('view')\n    //         }\n    //         this.setState({ versionPreview: index })\n    //     }\n    // }\n\n    render() {\n\n        // const { versionSwitch, versionPreview } = this.state\n        let showVersion = null\n        // if (versionSwitch === 0) {\n            // showVersion = < Old />\n        // } else if (versionSwitch === 1) {\n            showVersion = < New />\n        // }\n\n        // const oldInfo = <>\n        //     - CS639 class project, finished in Fall 2019. <br /><br />\n        //     - I had no JS+CSS+HTML background before I took this class.\n        //     The final product had a rough structure design, a confusing human-computer interaction design and a flawed Algorithm logic design.<br /><br />\n        //     - This project was built with React and Bootstrap components. Basic UI design and prototyping was finished using Adobe XD <br /><br /> </>\n        // const newInfo = ''\n\n        return (\n            <>\n                {/* <div className='mainPage' style={{ display: versionSwitch === -1 ? '' : 'none' }}>\n                    <div className='content'>\n                        <div className='versionBox'>\n                            {\n                                [old_screenshot, new_screenshot].map((item, index) => {\n                                    let initClassName = index === 0 ? 'boxContent view' : 'boxContent'\n                                    return <div \n                                        key={item}\n                                        className={initClassName}\n                                        onClick={() => {}}>\n\n                                        <div className='versionTitle'>Course Scheduler</div>\n                                        <div\n                                            className='previewBox'\n                                            style={{ backgroundImage: `url(${item})` }}\n                                        >\n                                        </div>\n                                        <div className='text' onClick={()=>this.setState({ versionSwitch: index })}>\n                                            {index === 0 ? oldInfo : newInfo}\n                                            <span>CLICK TO VIEW</span>\n                                        </div>\n                                    </div> })\n                            }\n                        </div>\n                        <div className='notes'>\n                            {\n                                ['Old Version', 'New Version'].map((item, index) => (\n                                    <div \n                                        key={item}\n                                        className='note' \n                                        onClick={ ()=>this.clickBoxContent(index)}\n                                        style={{ \n                                            zIndex: versionPreview === index ? '20' : '0',\n                                            background: versionPreview === index ? 'rgba(255, 131, 131, 1)' : 'rgba(255, 131, 131, 0.6)',\n                                        }}>\n                                            {item}\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                </div> */}\n\n                {showVersion}\n\n            </>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}